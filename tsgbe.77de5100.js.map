{"version":3,"sources":["node_modules/tslib/tslib.es6.js","node_modules/regenerator-runtime/runtime.js","src/app/peripherals/cartridge.ts","src/app/peripherals/mbc0.ts","src/app/peripherals/mbc1.ts","src/app/peripherals/mbc2.ts","src/app/peripherals/mbc3.ts","src/app/peripherals/mbc4.ts","src/app/peripherals/mbc5.ts","src/app/peripherals/index.ts","src/app/util/constants.ts","src/app/kernel/gpu.ts","src/app/kernel/registers.ts","src/app/kernel/instructions.ts","src/app/kernel/cpu.ts","src/app/render.ts","src/app/kernel/memory.ts","src/app/peripherals/keypad.ts","src/app/tsgbe.ts","src/app/util/key.ts","index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","pop","push","__createBinding","o","m","k","k2","undefined","enumerable","get","__exportStar","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__spreadArray","to","from","__await","__asyncGenerator","asyncIterator","q","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","privateMap","has","__classPrivateFieldSet","set","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"tsgbe.77de5100.js","sourceRoot":"..","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export abstract class Cartridge {\n\n    public name: string;\n    protected romChunks: number;\n    protected ramChunks: number;\n    protected rom: Uint8Array;\n    protected ram: Uint8Array;\n\n    constructor(data: Uint8Array) {\n        this.load(data);\n        if (!this.checksum()) {\n            throw new Error('[ERROR] Invalid checksum!');\n        }\n    }\n\n    abstract read(direction: number): number;\n    abstract write(value: number, direction: number): void;\n\n    private load(data: Uint8Array) {\n        // Primero carga los primeros 16 Kb (tamanyo minimo) para conocer el tamanyo real del cartucho\n        this.rom = data;\n        switch (this.rom[0x0148]) {\n            case 0: this.romChunks = 2; break;\n            case 1: this.romChunks = 4; break;\n            case 2: this.romChunks = 8; break;\n            case 3: this.romChunks = 16; break;\n            case 4: this.romChunks = 32; break;\n            case 5: this.romChunks = 64; break;\n            case 6: this.romChunks = 128; break;\n            case 0x52: this.romChunks = 72; break;\n            case 0x53: this.romChunks = 80; break;\n            case 0x54: this.romChunks = 96; break;\n            default: this.romChunks = 0; break;\n        }\n\n        switch (this.rom[0x149]) {\n            case 0: this.ramChunks = 0; break;\n            case 1: this.ramChunks = 1; break;\n            case 2: this.ramChunks = 1; break;\n            case 3: this.ramChunks = 4; break;\n            case 4: this.ramChunks = 16; break;\n            case 5: this.ramChunks = 32; break;\n            default: this.ramChunks = 0; break;\n        }\n        this.ram = new Uint8Array(0x2000 * this.ramChunks);\n        // Lee el nombre interno de la ROM\n        this.name = '';\n        for (let i = 0x134; i <= 0x142; i++) {\n            if (this.rom[i]) {\n                this.name += String.fromCharCode(this.rom[i]);\n            }\n        }\n    }\n\n    private checksum(): boolean {\n        // El resultado del checksum son 2 bytes\n        const checksum = (this.rom[0x14E] << 8) + this.rom[0x14F];\n        let total = 0;\n        // Se suman todos los bytes de la rom a excepcion de los del resultado\n        for (let i = 0; i < this.rom.length; i++) {\n            if (i != 0x14E && i != 0x14F) {\n                total = (total + this.rom[i]) & 0x0000FFFF;\n            }\n        }\n        return checksum == total;\n    }\n\n}","import { Cartridge } from \"./cartridge\";\n\nexport class MBC0 extends Cartridge {\n\n    public constructor(data: Uint8Array){\n        super(data);\n    }\n\n    read(direction: number): number {\n        return this.rom[direction];\n    }\n\n    write(value: number, direction: number) {\n        // Not allowed in MBC0 type cartridges\n    }\n\n}","import { Cartridge } from \"./cartridge\";\n\nexport class MBC1 extends Cartridge {\n\n    // Determina si la zona de RAM esta habilitada\n    private ramEnabled: boolean = false;\n    // Banco de ROM que se encuentra actualmente proyectado\n    private romPage: number = 1;\n    /// Banco de RAM que se encuentra actualmente proyectado\n    private ramPage: number = 0;\n    // Determina si el cartucho tiene habilitado el modo de extension de RAM\n    private mbcMode: number = 0;\n\n    public constructor(data: Uint8Array) {\n        super(data);\n    }\n\n    read(direction: number): number {\n        let valor: number = 0;\n        if (direction >= 0) {\n            // Banco 0\n            if (direction < 0x4000) valor = this.rom[direction];\n            // Banco 1-n\n            else if (direction < 0x8000) valor = this.rom[(direction - 0x4000) + (this.romPage * 0x4000)];\n            // Banco 0-n de RAM\n            else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) valor = this.ram[(direction - 0xA000) + (this.ramPage * 0x2000)];\n        }\n        return valor;\n\n    }\n\n    write(value: number, direction: number) {\n        // 0-0x2000: RAM activada o desactivada\n        if (direction < 0x2000) this.ramEnabled = (value & 0x0F) == 0x0A ? true : false;\n        // 0x2000-0x4000: Seleccion de banco de ROM\n        else if (direction < 0x4000) { this.romPage = (value & 0x1F); if (this.romPage == 0) this.romPage = 1; }\n        else if (direction < 0x6000 && this.mbcMode == 1) this.ramPage = value & 0x03;\n        else if (direction < 0x6000 && this.mbcMode == 0) this.romPage = (this.romPage & 0x07) | ((value & 0x03) << 3);\n        else if (direction < 0x8000) this.mbcMode = value & 0x01;\n        // RAM\n        else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) this.ram[(direction - 0xA000) + (this.ramPage * 0x2000)] = value;\n    }\n\n}","import { Cartridge } from './cartridge';\n\nexport class MBC2 extends Cartridge {\n\n    // Determina si la zona de RAM esta habilitada\n    private ramEnabled: boolean = false;\n    // Banco de ROM que se encuentra actualmente proyectado\n    private romPage: number = 1;\n\n    public constructor(data: Uint8Array) {\n        super(data);\n    }\n\n    read(direction: number): number {\n        let value: number = 0;\n        if (direction >= 0) {\n            // Banco 0\n            if (direction < 0x4000) value = this.rom[direction];\n            // Banco 1-n\n            else if (direction < 0x8000) value = this.rom[(direction - 0x4000) + (this.romPage * 0x4000)];\n            // Banco 0 de RAM\n            else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) value = this.ram[(direction - 0xA000)];\n        }\n        return value;\n    }\n\n    write(value: number, direction: number) {\n        // 0-0x2000: RAM activada o desactivada\n        if (direction < 0x2000) this.ramEnabled = (value & 0x0F) == 0x0A ? true : false;\n        // 0x2000-0x4000: Seleccion de banco de ROM\n        else if (direction < 0x4000) this.romPage = value & 0x0F;\n        // RAM\n        else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) this.ram[(direction - 0xA000)] = value;\n    }\n\n}","import { Cartridge } from \"./cartridge\";\n\nexport class MBC3 extends Cartridge {\n\n    /// Determina si la zona de RAM esta habilitada\n    private ramEnabled: boolean = false;\n    /// Banco de ROM que se encuentra actualmente proyectado\n    private romPage: number = 1;\n    /// Banco de RAM que se encuentra actualmente proyectado\n    private ramPage: number = 0;\n\n    public constructor(data: Uint8Array) {\n        super(data);\n    }\n\n    read(direction: number): number {\n        let value: number = 0;\n        if (direction >= 0) {\n            // Banco 0\n            if (direction < 0x4000) value = this.rom[direction];\n            // Banco 1-n\n            else if (direction < 0x8000) value = this.rom[(direction - 0x4000) + (this.romPage * 0x4000)];\n            // Banco 0-n de RAM\n            else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) value = this.ram[(direction - 0xA000) + (this.ramPage * 0x2000)];\n        }\n        return value;\n    }\n\n    write(value: number, direction: number) {\n        // 0-0x2000: RAM activada o desactivada\n        if (direction < 0x2000) this.ramEnabled = (value & 0x0F) == 0x0A ? true : false;\n        // 0x2000-0x4000: Seleccion de banco de ROM\n        else if (direction < 0x4000) this.romPage = value & 0x7F;\n        // 0x4000-0x6000: Seleccion de banco de RAM\n        else if (direction < 0x6000) this.ramPage = value & 0x03;\n        // RAM\n        else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) this.ram[(direction - 0xA000) + (this.ramPage * 0x2000)] = value;\n    }\n\n}","import { Cartridge } from \"./cartridge\";\n\nexport class MBC4 extends Cartridge {\n\n    public constructor(data: Uint8Array) {\n        super(data);\n    }\n\n    read(direction: number): number {\n        return 0;\n    }\n\n    write(value: number, direction: number) {\n        // TODO\n    }\n\n}","import { Cartridge } from \"./cartridge\";\n\nexport class MBC5 extends Cartridge {\n\n    // Determina si la zona de RAM esta habilitada\n    private ramEnabled: boolean = false;\n    // Banco de ROM que se encuentra actualmente proyectado\n    private romPage: number = 1;\n    // Banco de RAM que se encuentra actualmente proyectado\n    private ramPage: number = 0;\n\n    public constructor(data: Uint8Array) {\n        super(data);\n    }\n\n    read(direction: number): number {\n        let value: number = 0;\n        if (direction >= 0) {\n            // Banco 0\n            if (direction < 0x4000) value = this.rom[direction];\n            // Banco 1-n\n            else if (direction < 0x8000) value = this.rom[(direction - 0x4000) + (this.romPage * 0x4000)];\n            // Banco 0-n de RAM\n            else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) value = this.ram[(direction - 0xA000) + (this.ramPage * 0x2000)];\n        }\n        return value;\n    }\n\n    write(value: number, direction: number) {\n        // 0-0x2000: Activa a desctiva la RAM\n        if (direction < 0x2000) this.ramEnabled = (value & 0x0F) == 0x0A ? true : false;\n        // 0x2000-0x3000: Seleccion parte baja del banco de ROM\n        else if (direction < 0x3000) this.romPage = (this.romPage & 0x100) | (value & 0xFF);\n        // 0x3000-0x4000: Seleccion parte alta del banco de ROM\n        else if (direction < 0x4000) this.romPage |= ((value & 0x01) << 8);\n        // 0x4000-0x6000: Seleccion banco de RAM\n        else if (direction < 0x6000) this.ramPage = value & 0x0F;\n        // RAM\n        else if (direction >= 0xA000 && direction < 0xC000 && this.ramEnabled) this.ram[(direction - 0xA000) + (this.ramPage * 0x2000)] = value;\n    }\n\n}","export { MBC0 } from './mbc0';\nexport { MBC1 } from './mbc1';\nexport { MBC2 } from './mbc2';\nexport { MBC3 } from './mbc3';\nexport { MBC4 } from './mbc4';\nexport { MBC5 } from './mbc5';\n","export class Constants{\n\n    static readonly JOYPAD                = 0xFF00;\n    static readonly SERIAL_DATA           = 0xFF01;\n    static readonly SERIAL_CTRL           = 0xFF02;\n    static readonly DIV_CNTR              = 0xFF04;\n    static readonly TIMER_COUNT           = 0xFF05;\n    static readonly TIMER_RELOAD          = 0xFF06;\n    static readonly TIMER_CRTL            = 0xFF07;\n    static readonly INT_FLAG              = 0xFF0F;\n\n    static readonly SND_1_ENT             = 0xFF10;\n    static readonly SND_1_WAV_LEN         = 0xFF11;\n    static readonly SND_1_ENV             = 0xFF12;\n    static readonly SND_1_FREQ_KICK_LOWER = 0xFF13;\n    static readonly SND_1_FREQ_KICK_UPPER = 0xFF14;\n    static readonly SND_2_WAVE_LEN        = 0xFF16;\n    static readonly SND_2_ENV             = 0xFF17;\n    static readonly SND_2_FREQ_KICK_LOWER = 0xFF18;\n    static readonly SND_2_FREQ_KICK_UPPER = 0xFF19;\n    static readonly SND_3_ON_OFF          = 0xFF1A;\n    static readonly SND_3_LEN             = 0xFF1B;\n    static readonly SND_3_VOLUME          = 0xFF1C;\n    static readonly SND_3_FREQ_KICK_LOWER = 0xFF1D;\n    static readonly SND_3_FREQ_KICK_UPPER = 0xFF1E;\n\n    static readonly SND_4_LEN             = 0xFF20;\n    static readonly SND_4_ENV             = 0xFF21;\n    static readonly SND_4_POLY_KICK_LOWER = 0xFF22;\n    static readonly SND_4_POLY_KICK_UPPER = 0xFF23;\n    static readonly SND_VOICE_INP         = 0xFF24;\n    static readonly SND_STEREO            = 0xFF25;\n    static readonly SND_STAT              = 0xFF26;\n\n    static readonly SND_BNK_10            = 0xFF30;\n    static readonly SND_BNK_11            = 0xFF31;\n    static readonly SND_BNK_12            = 0xFF32;\n    static readonly SND_BNK_13            = 0xFF33;\n    static readonly SND_BNK_14            = 0xFF34;\n    static readonly SND_BNK_15            = 0xFF35;\n    static readonly SND_BNK_16            = 0xFF36;\n    static readonly SND_BNK_17            = 0xFF37;\n    static readonly SND_BNK_20            = 0xFF38;\n    static readonly SND_BNK_21            = 0xFF39;\n    static readonly SND_BNK_22            = 0xFF3A;\n    static readonly SND_BNK_23            = 0xFF3B;\n    static readonly SND_BNK_24            = 0xFF3C;\n    static readonly SND_BNK_25            = 0xFF3D;\n    static readonly SND_BNK_26            = 0xFF3E;\n    static readonly SND_BNK_27            = 0xFF3F;\n\n    static readonly LCD_CTRL              = 0xFF40;\n    static readonly LCD_STAT              = 0xFF41;\n    static readonly LCD_SCROLL_Y          = 0xFF42;\n    static readonly LCD_SCROLL_X          = 0xFF43;\n    static readonly LCD_Y_LOC             = 0xFF44;\n    static readonly LCD_Y_COMP            = 0xFF45;\n    static readonly LCD_DMA               = 0xFF46;\n    static readonly LCD_BACK_PALETTE      = 0xFF47;\n    static readonly LCD_SPR0_PALETTE      = 0xFF48;\n    static readonly LCD_SPR1_PALETTE      = 0xFF49;\n    static readonly LCD_WIN_Y             = 0xFF4A;\n    static readonly LCD_WIN_X             = 0xFF4B;\n    static readonly CPU_SPEED_REG         = 0xFF4D;\n    static readonly VRAM_BANK             = 0xFF4F;\n\n    static readonly DMA_SRC_UPPER         = 0xFF51;\n    static readonly DMA_SRC_LOWER         = 0xFF52;\n    static readonly DMA_DST_UPPER         = 0xFF53;\n    static readonly DMA_DST_LOWER         = 0xFF54;\n    static readonly DMA_LEN_TYPE          = 0xFF55; \n    static readonly IR_PORT               = 0xFF56; \n\n    static readonly BGP_INDEX             = 0xFF68; \n    static readonly BGP_DATA              = 0xFF69; \n    static readonly OBP_INDEX             = 0xFF6A; \n    static readonly OBP_DATA              = 0xFF6B; \n\n    static readonly RAM_BANK              = 0xFF70; \n    static readonly INT_ENABLE            = 0xFFFF;                                    \n\n    static readonly INSTR_HBLANK          = 60;\n    static readonly INSTR_VBLANK          = 90000;\n    static readonly INSTR_TIMA            = 6000;\n    static readonly INSTR_DIV             = 33;\n\n    // Tiempos en ciclos\n    static readonly CYCLES_DIV            = 256;\n    static readonly CYCLES_TIMER_MODE0    = 1024;\n    static readonly CYCLES_TIMER_MODE1    = 16;\n    static readonly CYCLES_TIMER_MODE2    = 64;\n    static readonly CYCLES_TIMER_MODE3    = 256;\n    static readonly CYCLES_LCD_MODE0      = 375; // 376 / 375\n    static readonly CYCLES_LCD_MODE1      = 456;\n    static readonly CYCLES_LCD_MODE2      = 82; // 80 / 82\n    static readonly CYCLES_LCD_MODE3      = 172;\n\n    static readonly INT_VBLANK            = 0x01;\n    static readonly INT_LCDC              = 0x02;\n    static readonly INT_TIMER             = 0x04;\n    static readonly INT_SERIALTX          = 0x08;\n    static readonly INT_KEY               = 0x10;\n\n    static readonly KEY_DOWN              = 0;\n    static readonly KEY_UP                = 1;\n    static readonly KEY_LEFT              = 2;\n    static readonly KEY_RIGHT             = 3;\n    static readonly KEY_START             = 4;\n    static readonly KEY_SELECT            = 5;\n    static readonly KEY_B                 = 6;\n    static readonly KEY_A                 = 7;\n\n    static readonly CPU_SPEED             = 4.194304; // MHz\n    static readonly MEMSIZE               = 65536; // Bytes\n\n    static readonly DMG_COLORS = [0x9BBC0F, 0x8BAC0F, 0x306230, 0x0F380F];\n    static readonly DMG_COLORS_BW = [0xE6E6E6, 0xA0A0A0, 0x505050, 0x141414]; // [230, 160, 80, 20];\n    static readonly SCREEN_WIDTH = 160;\n    static readonly SCREEN_HEIGHT = 144;\n\n}","import { Memory } from \"./memory\";\nimport { Constants } from \"../util/constants\";\nimport { RenderScreen } from \"../render\";\n\nexport class GPU {\n\n    private memory: Memory;\n    private screen: RenderScreen;\n    private buffers: Uint8Array[];\n    private currentBuffer: number;\n\n    constructor(memory: Memory, screen: RenderScreen) {\n        this.memory = memory;\n        this.screen = screen;\n        this.buffers = [\n            new Uint8Array(Constants.SCREEN_WIDTH * Constants.SCREEN_HEIGHT),\n            new Uint8Array(Constants.SCREEN_WIDTH * Constants.SCREEN_HEIGHT),\n        ];\n        this.currentBuffer = 0;\n    }\n\n    hblank() {\n        const scanLine: number = (this.memory.read(Constants.LCD_Y_LOC) & 0xFF);\n        this.updateBackground(scanLine);\n        this.updateWindow(scanLine);\n        this.updateSprites(scanLine);\n    }\n\n    /// <summary>Actualiza el fondo de la pantalla de una linea concreta</summary>\n    /// <param name=\"scanLine\">Linea a actualizar</param>\n    private updateBackground(scanLine: number) {\n        // Solo dibuja las lineas visibles (0-144)\n        if (((this.memory.read(Constants.LCD_CTRL) & 0x01) != 0) && scanLine < 144) {\n            const mapAddress = (this.memory.read(Constants.LCD_CTRL) & 0x08) != 0 ? 0x9C00 : 0x9800; // BG Tile Map Display Select\n            const tileAddress = (this.memory.read(Constants.LCD_CTRL) & 0x10) != 0 ? 0x8000 : 0x8800; // BG & Window Tile Data Select\n\n            let scrollX = this.memory.read(Constants.LCD_SCROLL_X);\n            let scrollY = this.memory.read(Constants.LCD_SCROLL_Y);\n\n            // La linea tiene 160 pixeles de ancho\n            for (let x = 0; x < 160; x++) {\n                if ((scrollY + scanLine) > 255) scrollY -= 255;\n                if ((scrollX + x) > 255) scrollX -= 255;\n\n                // Tile\n                const xTile = (scrollX + x) >> 3;\n                const yTile = (scrollY + scanLine) >> 3;\n                // Pixel dentro del tile\n                const bitX = (scrollX + x) & 0x07;\n                const bitY = (scrollY + scanLine) & 0x07;\n\n                const idTile = this.getIdTile(xTile, yTile, mapAddress, tileAddress);\n                const tile = this.getTile(idTile, tileAddress, bitX, bitY);\n                this.drawPixel(x, scanLine, this.id2color(tile, Constants.LCD_BACK_PALETTE));\n            }\n        }\n    }\n\n\n    /// <summary>Actualiza la ventana de una linea concreta</summary>\n    /// <remarks>La ventana es como otro fondo superpuesto al anterior, pero colocado en una posicion determinada\n    /// de la pantalla. Usa los mismos tiles que el fondo</remarks>\n    /// <param name=\"scanLine\">Linea a actualizar</param>\n    private updateWindow(scanLine: number) {\n        const winY = this.memory.read(Constants.LCD_WIN_Y);\n\n        if (((this.memory.read(Constants.LCD_CTRL) & 0x20) != 0) && winY <= scanLine) {\n\n            const winX = this.memory.read(Constants.LCD_WIN_X) - 7;\n            const mapAddress = (this.memory.read(Constants.LCD_CTRL) & 0x40) != 0 ? 0x9C00 : 0x9800;\n            const tileAddress = (this.memory.read(Constants.LCD_CTRL) & 0x10) != 0 ? 0x8000 : 0x8800;\n\n            for (let wx = 0; wx < (160 - winX); wx++) {\n                const xTile = wx >> 3;\n                const yTile = (scanLine - winY) >> 3;\n\n                const bitX = wx & 0x07;\n                const bitY = (scanLine - winY) & 0x07;\n\n                const idTile = this.getIdTile(xTile, yTile, mapAddress, tileAddress);\n                const tile = this.getTile(idTile, tileAddress, bitX, bitY);\n                if ((wx + winX) < 160 && (wx + winX) >= 0) {\n                    this.drawPixel(wx + winX, scanLine, this.id2color(tile, Constants.LCD_BACK_PALETTE));\n                }\n            }\n        }\n    }\n\n    /// <summary>Actualiza los sprites que aparecen en una linea de la pantalla</summary>\n    /// <param name=\"scanLine\">Linea a actualizar</param>\n    private updateSprites(scanLine: number) {\n        if ((this.memory.read(Constants.LCD_CTRL) & 0x02) != 0) {\n\n            // Los sprites pueden ser de 8x8 o 8x16 pixeles \n            const spriteSize = (this.memory.read(Constants.LCD_CTRL) & 0x04) != 0 ? 16 : 8;\n            // El sprite 0 es el de menor prioridad\n            for (let i = 39; i >= 0; i--) {\n                const spriteY = this.memory.read(0xFE00 + (i * 4));\n                const spriteX = this.memory.read(0xFE01 + (i * 4));\n\n                if ((spriteY <= scanLine + 16) && (spriteY > scanLine + (16 - spriteSize))) {\n                    const tileNum = this.memory.read(0xFE02 + (i * 4));\n                    const attributes = this.memory.read(0xFE03 + (i * 4));\n\n                    // Paleta a utilizar\n                    const pal: boolean = (attributes & 0x10) == 0x10;\n                    // Inversion horizontal\n                    const flipX: boolean = (attributes & 0x20) == 0x20;\n                    // Inversion vertical\n                    const flipY: boolean = (attributes & 0x40) == 0x40;\n                    // Prioridad sobre el fondo/ventana\n                    const priority: boolean = (attributes & 0x80) == 0x80;\n\n                    // Todos los sprites tiene 8 pixeles de ancho\n                    for (let j = 0; j < 8; j++) {\n                        const posX = flipX ? spriteX - 1 - j : spriteX + j - 8;\n                        const posY = flipY ? spriteSize - (scanLine - spriteY + 17) : scanLine - spriteY + 16;\n                        const tile = this.getTile(tileNum, 0x8000, j, posY);\n                        if (posX >= 0 && tile != 0 && (!priority || (priority && this.getIdColor(posX, scanLine) == 0))) {\n                            this.drawPixel(posX, scanLine, this.id2color(tile, pal ? Constants.LCD_SPR1_PALETTE : Constants.LCD_SPR0_PALETTE));\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    vblank() {\n        this.screen.refresh(this.buffers[this.currentBuffer]);\n        this.currentBuffer = ~this.currentBuffer & 1;\n    }\n\n    private drawPixel(posx: number, posy: number, id_color: number) {\n        this.buffers[this.currentBuffer][(posy * Constants.SCREEN_WIDTH) + posx] = id_color;\n    }\n\n    /// <summary>Obtiene el identificador de color del fondo/ventana en una posicion concreta</summary>\n    /// <param name=\"x\">Posicion X de la pantalla</param>\n    /// <param name=\"y\">Posicion Y de la pantalla</param>\n    /// <returns>El identificador de color</returns>\n    private getIdColor(x: number, y: number): number {\n        const mapAddress = (this.memory.read(Constants.LCD_CTRL) & 0x08) != 0 ? 0x9C00 : 0x9800;\n        const tileAddress = (this.memory.read(Constants.LCD_CTRL) & 0x10) != 0 ? 0x8000 : 0x8800;\n        let scrollX = this.memory.read(Constants.LCD_SCROLL_X);\n        let scrollY = this.memory.read(Constants.LCD_SCROLL_Y);\n\n        if ((scrollY + y) > 255) scrollY -= 255;\n        if ((scrollX + x) > 255) scrollX -= 255;\n\n        const idTile = this.getIdTile((scrollX + x) >> 3, (scrollY + y) >> 3, mapAddress, tileAddress);\n        const tile = this.getTile(idTile, tileAddress, (scrollX + x) & 0x07, (scrollY + y) & 0x07);\n        return tile;\n    }\n\n    /// <summary>Transforma un identificador de color en su color real usando una paleta de colores</summary>\n    /// <param name=\"id\">Identificador de color (0-3)</param>\n    /// <param name=\"direccion\">Direccion de memoria donde se encuentra la paleta de colores</param>\n    /// <returns>El color correspondiente al identificador de color</returns>\n    private id2color(id: number, direccion: number): number {\n        // 11 10 01 00\n        const valor = this.memory.read(direccion);\n        const color = (valor & (0x03 << (id * 2))) >> (id * 2);\n        return color;\n    }\n\n    /// <summary>Obtiene el numero de tile correspondiente a una posicion de la pantalla</summary>\n    /// <remarks>La pantalla esta dividida en tiles de 8x8 pixeles. La ubicacion de los sprites es necesaria\n    /// porque si estan en la direccion 0x8000 su identificador del mapa tiene signo</remarks>\n    /// <param name=\"xTile\">Tile horizontal</param>\n    /// <param name=\"yTile\">Tile vertical</param>\n    /// <param name=\"mapAddress\">Direccion del mapa de colocacion de tiles</param>\n    /// <param name=\"tileAddress\">Direccion de los datos de los sprites</param>\n    /// <returns>El identificador de tile</returns>\n    private getIdTile(xTile: number, yTile: number, mapAddress: number, tileAddress: number): number {\n        let idTile = this.memory.read(mapAddress + (yTile << 5) + xTile);\n        if (tileAddress != 0x8000) idTile ^= 0x80;\n        return idTile;\n    }\n\n    /// <summary>Obtiene el valor del color de un pixel de un tile en concreto</summary>\n    /// <param name=\"idTile\">Identificador de tile</param>\n    /// <param name=\"tileAddress\">Direccion de memoria donde se encuentran todos los tiles</param>\n    /// <param name=\"bitX\">Posicion X del pixel dentro del tile</param>\n    /// <param name=\"bitY\">Posicion Y del pixel dentro del tile</param>\n    private getTile(idTile: number, tileAddress: number, bitX: number, bitY: number): number {\n        // El color de un pixel esta compuesto por dos bits (4 colores, blanco, negro y dos niveles de gris)\n        const a = ((this.memory.read(tileAddress + 1 + (bitY << 1) + (idTile << 4)) >> (7 - bitX)) & 0x01) << 1;\n        const b = (this.memory.read(tileAddress + (bitY << 1) + (idTile << 4)) >> (7 - bitX)) & 0x01;\n        return a | b;\n    }\n\n\n}","\nexport class Registers {\n\n    // 8 bit registries\n    private registers: {\n        A: number;\n        B: number;\n        C: number;\n        D: number;\n        E: number;\n\n        // 16 bits registries\n        SP: number;\n        PC: number;\n        HL: number;\n    }\n\n    // flags\n    private flags: {\n        Z: boolean;\n        H: boolean;\n        N: boolean;\n        C: boolean;\n    }\n\n    // Interrupt Master Enable\n    private IME: boolean;\n\n    constructor() {\n        this.registers = {\n            A: 0, B: 0,\n            C: 0, D: 0,\n            E: 0, SP: 0,\n            PC: 0, HL: 0\n        }\n        this.flags = {\n            Z: false,\n            H: false,\n            N: false,\n            C: false\n        }\n    }\n\n    public get A(): number { return this.registers.A; }\n    public set A(value: number) { this.registers.A = value; }\n\n    public get B(): number { return this.registers.B; }\n    public set B(value: number) { this.registers.B = value; }\n\n    public get C(): number { return this.registers.C; }\n    public set C(value: number) { this.registers.C = value; }\n\n    public get D(): number { return this.registers.D; }\n    public set D(value: number) { this.registers.D = value; }\n\n    public get E(): number { return this.registers.E; }\n    public set E(value: number) { this.registers.E = value; }\n\n    public get flagIME(): boolean { return this.IME; }\n    public set flagIME(value: boolean) { this.IME = value; }\n\n    public get SP(): number { return this.registers.SP; }\n    public set SP(value: number) { this.registers.SP = value; }\n\n    public get PC(): number { return this.registers.PC; }\n    public set PC(value: number) { this.registers.PC = value; }\n\n    public get HL(): number { return this.registers.HL; }\n    public set HL(value: number) { this.registers.HL = value; }\n\n    public get H(): number { return ((this.registers.HL & 0xFF00) >> 8); }\n    public set H(value: number) { this.registers.HL = (this.registers.HL & 0x00FF) | (value << 8); }\n\n    public get L(): number { return (this.registers.HL & 0x00FF); }\n    public set L(value: number) { this.registers.HL = (this.registers.HL & 0xFF00) | value; }\n\n    public get BC(): number { return (this.registers.B << 8) | this.registers.C; }\n    public set BC(value: number) {\n        this.registers.B = ((value & 0xFF00) >> 8);\n        this.registers.C = (value & 0x00FF);\n    }\n\n    public get DE(): number { return (this.registers.D << 8) | this.registers.E; }\n    public set DE(value: number) {\n        this.registers.D = ((value & 0xFF00) >> 8);\n        this.registers.E = (value & 0x00FF);\n    }\n\n    public get AF(): number { return (this.registers.A << 8) | this.getFlags(); }\n    public set AF(value: number) {\n        this.registers.A = ((value & 0xFF00) >> 8);\n        this.setFlags(value & 0x00FF);\n    }\n\n    public get F(): number { return this.getFlags(); }\n    public set F(value: number) { this.setFlags(value); }\n\n    public get flagZ(): boolean { return this.flags.Z; }\n    public set flagZ(value: boolean) { this.flags.Z = value; }\n\n    public get flagN(): boolean { return this.flags.N; }\n    public set flagN(value: boolean) { this.flags.N = value; }\n\n    public get flagH(): boolean { return this.flags.H; }\n    public set flagH(value: boolean) { this.flags.H = value; }\n\n    public get flagC(): boolean { return this.flags.C; }\n    public set flagC(value: boolean) { this.flags.C = value; }\n\n    // Obtiene el estado de un flag por su nombre\n    // Nombre del flag (Z, N, H, C)\n    public getFlag(flag: string): boolean {\n        let value: boolean = false;\n        switch (flag) {\n            case \"Z\": value = this.flags.Z; break;\n            case \"N\": value = this.flags.N; break;\n            case \"H\": value = this.flags.H; break;\n            case \"C\": value = this.flags.C; break;\n        }\n        return value;\n    }\n\n    // Asigna un nuevo estado a un flag identificado por su nombre\n    // El nombre del flag (Z, N, H, C)\n    public setFlag(flag: string, value: boolean) {\n        switch (flag) {\n            case \"Z\": this.flags.Z = value; break;\n            case \"N\": this.flags.N = value; break;\n            case \"H\": this.flags.H = value; break;\n            case \"C\": this.flags.C = value; break;\n        }\n    }\n\n    // Obtiene el valor del registro con todos los flags\n    public getFlags(): number {\n        let flags: number = 0;\n        const Z = 0x80; // 1000 0000\n        const N = 0x40; // 0100 0000\n        const H = 0x20; // 0010 0000\n        const C = 0x10; // 0001 0000\n\n        if (this.flags.Z == true) { flags |= Z; }\n        if (this.flags.H == true) { flags |= H; }\n        if (this.flags.N == true) { flags |= N; }\n        if (this.flags.C == true) { flags |= C; }\n\n        return flags & 0xFF;\n    }\n\n    // Asigna un nuevo estado a todos los flags a partir de su equivalente numerico\n    public setFlags(flags: number) {\n        const Z = 0x80; // 1000 0000\n        const N = 0x40; // 0100 0000\n        const H = 0x20; // 0010 0000\n        const C = 0x10; // 0001 0000\n\n        this.flags.Z = ((flags & Z) != 0);\n        this.flags.H = ((flags & H) != 0);\n        this.flags.N = ((flags & N) != 0);\n        this.flags.C = ((flags & C) != 0);\n    }\n\n    // Obtiene el valor de un registro a partir de su nombre\n    // Nombre del registro (A, B, C, D, E, SP, PC, HL, BC, DE, H, L, AF, F)\n    public getReg(reg: string): number {\n        let value = -1;\n        switch (reg) {\n            case \"A\": value = this.A; break;\n            case \"B\": value = this.B; break;\n            case \"C\": value = this.C; break;\n            case \"D\": value = this.D; break;\n            case \"E\": value = this.E; break;\n            case \"SP\": value = this.SP; break;\n            case \"PC\": value = this.PC; break;\n            case \"HL\": value = this.HL; break;\n            case \"BC\": value = this.BC; break;\n            case \"DE\": value = this.DE; break;\n            case \"H\": value = this.H; break;\n            case \"L\": value = this.L; break;\n            case \"AF\": value = this.AF; break;\n            case \"F\": value = this.F; break;\n        }\n        return value;\n    }\n\n    //Asigna un valor a un registro identificado por su nombre\n    // Nombre del registro (A, B, C, D, E, SP, PC, HL, BC, DE, H, L, AF, F)\n    public setReg(reg: string, value: number) {\n        switch (reg) {\n            case \"A\": this.A = value; break;\n            case \"B\": this.B = value; break;\n            case \"C\": this.C = value; break;\n            case \"D\": this.D = value; break;\n            case \"E\": this.E = value; break;\n            case \"SP\": this.SP = value; break;\n            case \"PC\": this.PC = value; break;\n            case \"HL\": this.HL = value; break;\n            case \"BC\": this.BC = value; break;\n            case \"DE\": this.DE = value; break;\n            case \"H\": this.H = value; break;\n            case \"L\": this.L = value; break;\n            case \"AF\": this.AF = value; break;\n            case \"F\": this.F = value; break;\n        }\n    }\n\n    public reset() {\n        // Estado inicial de los registros y flags\n        this.flagIME = false;\n        this.flagZ = true;\n        this.flagN = false;\n        this.flagH = true;\n        this.flagC = true;\n        this.A = 0x11;\n        this.PC = 0x0100;\n        this.SP = 0xFFFE;\n        this.BC = 0x0013;\n        this.DE = 0x00D8;\n        this.HL = 0x014D;\n    }\n\n}","import { Registers } from './registers';\nimport { Memory } from './memory';\nimport { Constants } from '../util/constants';\n\nexport type Instruction = (registers: Registers, memory: Memory) => number;\n\nexport interface InstructionSet {\n    [index: number]: Instruction;\n}\n\nconst OPS = {\n    NOP: function (registers: Registers) { registers.PC += 1; return 4; },\n    LD: {\n        LD_DD_NN: function (registers: Registers, memory: Memory, reg: string) {\n            registers.setReg(reg, memory.readWord(registers.PC));\n            registers.PC += 3;\n            return 10;\n        },\n        LD_R_R: function (registers: Registers, destiny: string, origin: string) {\n            registers.setReg(destiny, registers.getReg(origin));\n            registers.PC += 1;\n            return 4;\n        },\n        LD_R_N: function (registers: Registers, memory: Memory, destiny: string) {\n            registers.setReg(destiny, memory.read(registers.PC + 1));\n            registers.PC += 2;\n            return 7;\n        },\n        LD_ADR_R: function (registers: Registers, memory: Memory, origin: string) {\n            memory.write(registers.getReg(origin), memory.readWord(registers.PC));\n            registers.PC += 3;\n            return 13;\n        },\n        LD_ADR_RR: function (registers: Registers, memory: Memory, origin: string) {\n            const value: number = registers.getReg(origin);\n            const direction: number = memory.readWord(registers.PC);\n            memory.write(value & 0xFF, direction);\n            memory.write((value >> 8) & 0xFF, direction + 1);\n            registers.PC += 3;\n            return 13;\n        },\n        LDD_RADR_R: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            let direction = registers.getReg(destiny);\n            memory.write(registers.getReg(origin), direction);\n            direction = direction == 0x00 ? 0xFFFF : direction - 1;\n            registers.setReg(destiny, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        LDI_RADR_R: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            let direction = registers.getReg(destiny);\n            memory.write(registers.getReg(origin), direction);\n            direction = direction == 0x00 ? 0xFFFF : direction + 1;\n            registers.setReg(destiny, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        LDD_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            let direction = registers.getReg(origin);\n            const value = memory.read(direction);\n            registers.setReg(destiny, value);\n            direction = direction == 0x00 ? 0xFFFF : direction - 1;\n            registers.setReg(origin, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        LDI_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            let direction = registers.getReg(origin);\n            const value = memory.read(direction);\n            registers.setReg(destiny, value);\n            direction = direction == 0x00 ? 0xFFFF : direction + 1;\n            registers.setReg(origin, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        LD_R_DADR: function (registers: Registers, memory: Memory, destiny: string) {\n            registers.setReg(destiny, memory.read(0xFF00 + memory.read(registers.PC + 1)));\n            registers.PC += 2\n            return 15;\n        },\n        LD_R_DR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            registers.setReg(destiny, memory.read(0xFF00 + registers.getReg(origin)));\n            registers.PC += 1;\n            return 15;\n        },\n        LD_DADR_R: function (registers: Registers, memory: Memory, origin: string) {\n            memory.write(registers.getReg(origin), 0xFF00 + memory.read(registers.PC + 1));\n            registers.PC += 2;\n            return 15;\n        },\n        LD_DR_R: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            memory.write(registers.getReg(origin), 0xFF00 + registers.getReg(destiny));\n            registers.PC += 1;\n            return 15;\n        },\n        LD_RADR_R: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            memory.write(registers.getReg(origin), registers.getReg(destiny));\n            registers.PC += 1;\n            return 7;\n        },\n        LD_R_ADR: function (registers: Registers, memory: Memory, destiny: string) {\n            registers.setReg(destiny, memory.read(memory.readWord(registers.PC)));\n            registers.PC += 3;\n            return 13;\n        },\n        LD_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            registers.setReg(destiny, memory.read(registers.getReg(origin)));\n            registers.PC += 1;\n            return 7;\n        },\n        LD_RADR_N: function (registers: Registers, memory: Memory, destiny: string) {\n            memory.write(memory.read(registers.PC + 1), registers.getReg(destiny));\n            registers.PC += 2;\n            return 10;\n        },\n        LD_R_SPD: function (registers: Registers, memory: Memory, destiny: string) {\n            let offset = memory.read(registers.PC + 1);\n            if (offset > 127) offset -= 256;\n            registers.setReg(destiny, registers.SP + offset);\n            registers.setFlags(0);\n            registers.flagC = registers.getReg(destiny) > 0xFFFF;\n            registers.PC += 2;\n            return 10;\n        }\n    },\n    INT: {\n        DI: function (registers: Registers) {\n            registers.flagIME = false;\n            registers.PC += 1;\n            return 4;\n        },\n        EI: function (registers: Registers) {\n            registers.flagIME = true;\n            registers.PC += 1;\n            return 4;\n        },\n        HALT: function (registers: Registers, memory: Memory) {\n            if (registers.flagIME && (memory.read(Constants.INT_FLAG) & memory.read(Constants.INT_ENABLE)) > 0) {\n                registers.PC += 1;\n            }\n            return 4;\n        },\n        STOP: function (registers: Registers) {\n            registers.PC += 2;\n            return 4;\n        }\n    },\n    BIT: {\n        BIT_R: function (registers: Registers, mask: number, reg: string) {\n            registers.flagZ = (mask & registers.getReg(reg)) == 0;\n            registers.flagH = true;\n            registers.flagN = false;\n            registers.PC += 1;\n            return 8;\n        },\n        BIT_RADR: function (registers: Registers, memory: Memory, mask: number, reg: string) {\n            registers.flagZ = (mask & memory.read(registers.getReg(reg))) == 0;\n            registers.flagH = true;\n            registers.flagN = false;\n            registers.PC += 1;\n            return 10;\n        },\n        SET_R: function (registers: Registers, mask: number, reg: string) {\n            registers.setReg(reg, registers.getReg(reg) | mask);\n            registers.PC += 1;\n            return 8;\n        },\n        SET_RADR: function (registers: Registers, memory: Memory, mask: number, reg: string) {\n            const direction = registers.getReg(reg);\n            memory.write(memory.read(direction) | mask, direction);\n            registers.PC += 1;\n            return 8;\n        },\n        RES_R: function (registers: Registers, mask: number, reg: string) {\n            registers.setReg(reg, registers.getReg(reg) & ~mask);\n            registers.PC += 1;\n            return 8;\n        },\n        RES_RADR: function (registers: Registers, memory: Memory, mask: number, reg: string) {\n            const direction = registers.getReg(reg);\n            memory.write(memory.read(direction) & ~mask, direction);\n            registers.PC += 1;\n            return 11;\n        },\n        SWAP_R: function (registers: Registers, reg: string) {\n            let value = registers.getReg(reg);\n            value = (((value & 0x0F) << 4) | ((value & 0xF0) >> 4));\n            registers.setReg(reg, value);\n            registers.setFlags(0);\n            registers.flagZ = value == 0;\n            registers.PC += 1;\n            return 8;\n        },\n        SWAP_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            let value = memory.read(direction);\n            value = (((value & 0x0F) << 4) | ((value & 0xF0) >> 4));\n            memory.write(value, direction);\n            registers.setFlags(0);\n            registers.flagZ = value == 0;\n            registers.PC += 1;\n            return 16;\n        }\n    },\n    COMP: {\n        CCF: function (registers: Registers) {\n            registers.flagN = false;\n            registers.flagH = false;\n            registers.flagC = !registers.flagC;\n            registers.PC += 1;\n            return 4;\n        },\n        CPL: function (registers: Registers) {\n            registers.flagN = true;\n            registers.flagH = true;\n            registers.A ^= 0xFF;\n            registers.A &= 0xFF;\n            registers.PC += 1;\n            return 4;\n        },\n        SCF: function (registers: Registers) {\n            registers.flagH = false;\n            registers.flagN = false;\n            registers.flagC = true;\n            registers.PC += 1;\n            return 4;\n        }\n    },\n    LOGIC: {\n        XOR_R: function (registers: Registers, reg: string) {\n            registers.A ^= registers.getReg(reg);\n            registers.A &= 0xFF;\n            registers.setFlags(0);\n            registers.flagZ = registers.A == 0;\n            registers.PC += 1;\n            return 4;\n        },\n        XOR_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            registers.A ^= memory.read(registers.getReg(reg));\n            registers.A &= 0xFF;\n            registers.setFlags(0);\n            registers.flagZ = registers.A == 0;\n            registers.PC += 1;\n            return 7;\n        },\n        XOR_N: function (registers: Registers, memory: Memory,) {\n            registers.A ^= memory.read(registers.PC + 1);\n            registers.A &= 0xFF;\n            registers.setFlags(0);\n            registers.flagZ = registers.A == 0;\n            registers.PC += 2;\n            return 7;\n        },\n        OR_R_R: function (registers: Registers, reg: string) {\n            registers.A |= registers.getReg(reg);\n            registers.setFlags(0);\n            registers.flagZ = registers.A == 0;\n            registers.PC += 1;\n            return 4;\n        },\n        AND_R_R: function (registers: Registers, reg: string) {\n            registers.A &= registers.getReg(reg);\n            registers.flagH = true;\n            registers.flagN = false;\n            registers.flagC = false;\n            registers.flagZ = registers.A == 0;\n            registers.PC += 1;\n            return 4;\n        },\n        AND_R_N: function (registers: Registers, memory: Memory) {\n            registers.A &= memory.read(registers.PC + 1);\n            registers.flagH = true;\n            registers.flagN = false;\n            registers.flagC = false;\n            registers.flagZ = registers.A == 0;\n            registers.PC += 2;\n            return 7;\n        },\n        AND_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            registers.A &= memory.read(registers.getReg(reg));\n            registers.flagH = true;\n            registers.flagN = false;\n            registers.flagC = false;\n            registers.flagZ = registers.A == 0;\n            registers.PC += 1;\n            return 7;\n        },\n        OR_R_ADR: function (registers: Registers, memory: Memory, reg: string) {\n            registers.A |= memory.read(registers.getReg(reg));\n            registers.setFlags(0);\n            registers.flagZ = registers.A == 0;\n            registers.PC += 1;\n            return 7;\n        },\n        OR_N: function (registers: Registers, memory: Memory) {\n            registers.A |= memory.read(registers.PC + 1);\n            registers.setFlags(0);\n            registers.flagZ = registers.A == 0;\n            registers.PC += 2;\n            return 7;\n        }\n    },\n    SHIFT: {\n        RLC: function (registers: Registers, reg: string, zero: boolean) {\n            const value = registers.getReg(reg);\n            const carry = (value & (0x01 << 7)) >> 7;\n            registers.flagC = (value & 0x80) != 0;\n            if (zero) registers.flagZ = (value & 0xFF) == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            registers.setReg(reg, ((value << 1) | carry) & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        RLC_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction);\n            const carry = (value & (0x01 << 7)) >> 7;\n            registers.flagC = (value & 0x80) != 0;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(((value << 1) | carry) & 0xFF, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        SLA: function (registers: Registers, reg: string) {\n            const value = registers.getReg(reg) << 1;\n            registers.flagC = value > 0xFF;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            registers.setReg(reg, value & 0xFF);\n            registers.PC += 1;\n            return 8;\n        },\n        SLA_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction) << 1;\n            registers.flagC = value > 0xFF;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(value & 0xFF, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        SRA: function (registers: Registers, reg: string) {\n            const value = registers.getReg(reg);\n            const result = ((value >> 1) | (value & 0x80)) & 0xFF;\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagZ = result == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            registers.setReg(reg, result);\n            registers.PC += 1;\n            return 8;\n        },\n        SRA_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction)\n            const result = ((value >> 1) | (value & 0x80)) & 0xFF;\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagZ = result == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(result, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        SRL: function (registers: Registers, reg: string) {\n            const value = registers.getReg(reg);\n            const result = (value >> 1) & 0xFF;\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagZ = result == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            registers.setReg(reg, result);\n            registers.PC += 1;\n            return 8;\n        },\n        SRL_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction)\n            const result = (value >> 1) & 0xFF;\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagZ = result == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(result, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        RL: function (registers: Registers, reg: string, zero: boolean) {\n            const value = (registers.getReg(reg) << 1) | (registers.flagC ? 1 : 0);\n            if (zero) registers.flagZ = (value & 0xFF) == 0;\n            registers.flagC = value > 0xFF;\n            registers.flagN = false;\n            registers.flagH = false;\n            registers.setReg(reg, value & 0xFF);\n            registers.PC += 1;\n            return 8;\n        },\n        RL_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = (memory.read(direction) << 1) | (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagC = value > 0xFF;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(value & 0xFF, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        RRC: function (registers: Registers, reg: string, zero: boolean) {\n            const value = registers.getReg(reg);\n            const result = (value >> 1) | ((value & 0x01) << 7);\n            if (zero) registers.flagZ = (result & 0xFF) == 0;\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagH = false;\n            registers.flagN = false;\n            registers.setReg(reg, result & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        RRC_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction)\n            const result = (value >> 1) | ((value & 0x01) << 7);\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagZ = result == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(result & 0xFF, direction);\n            registers.PC += 1;\n            return 15;\n        },\n        RR: function (registers: Registers, reg: string, zero: boolean) {\n            const value = registers.getReg(reg);\n            const result = (value >> 1) | ((registers.flagC ? 1 : 0) << 7);\n            if (zero) registers.flagZ = result == 0;\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagH = false;\n            registers.flagN = false;\n            registers.setReg(reg, result & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        RR_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction)\n            const result = (value >> 1) | ((registers.flagC ? 1 : 0) << 7);\n            registers.flagC = (value & 0x01) == 0x01;\n            registers.flagZ = result == 0;\n            registers.flagN = false;\n            registers.flagH = false;\n            memory.write(result & 0xFF, direction);\n            registers.PC += 1;\n            return 15;\n        }\n    },\n    JUMP: {\n        JP_ADR: function (registers: Registers, memory: Memory) {\n            registers.PC = memory.readWord(registers.PC);\n            return 10;\n        },\n        JP_RADR: function (registers: Registers, reg: string) {\n            registers.PC = registers.getReg(reg);\n            return 4;\n        },\n        JP_CC0_ADR: function (registers: Registers, memory: Memory, flag: string) {\n            const direction = memory.readWord(registers.PC);\n            registers.PC += 3;\n            if (!registers.getFlag(flag)) registers.PC = direction;\n            return 10;\n        },\n        JP_CC1_ADR: function (registers: Registers, memory: Memory, flag: string) {\n            const direction = memory.readWord(registers.PC);\n            registers.PC += 3;\n            if (registers.getFlag(flag)) registers.PC = direction;\n            return 10;\n        },\n        JR_N: function (registers: Registers, memory: Memory) {\n            let offset = memory.read(registers.PC + 1);\n            if (offset > 127) offset -= 256;\n            registers.PC += 2;\n            registers.PC += offset;\n            return 12;\n        },\n        JR_CC0_N: function (registers: Registers, memory: Memory, flag: string) {\n            let offset = memory.read(registers.PC + 1);\n            if (offset > 127) offset -= 256;\n            registers.PC += 2;\n            if (!registers.getFlag(flag)) {\n                registers.PC += offset;\n                return 12;\n            }\n            return 7;\n        },\n        JR_CC1_N: function (registers: Registers, memory: Memory, flag: string) {\n            let offset = memory.read(registers.PC + 1);\n            if (offset > 127) offset -= 256;\n            registers.PC += 2;\n            if (registers.getFlag(flag)) {\n                registers.PC += offset;\n                return 12;\n            }\n            return 7;\n        },\n        CALL_ADR: function (registers: Registers, memory: Memory) {\n            const direction = memory.readWord(registers.PC);\n            registers.PC += 3;\n            registers.SP--;\n            memory.write((registers.PC & 0xFF00) >> 8, registers.SP);\n            registers.SP--;\n            memory.write(registers.PC & 0x00FF, registers.SP);\n            registers.PC = direction;\n            return 17;\n        },\n        CALL_CC0_ADR: function (registers: Registers, memory: Memory, flag: string) {\n            const direction = memory.readWord(registers.PC);\n            registers.PC += 3;\n            if (!registers.getFlag(flag)) {\n                registers.SP--;\n                memory.write((registers.PC & 0xFF00) >> 8, registers.SP);\n                registers.SP--;\n                memory.write(registers.PC & 0x00FF, registers.SP);\n                registers.PC = direction;\n                return 17;\n            }\n            return 10;\n        },\n        CALL_CC1_ADR: function (registers: Registers, memory: Memory, flag: string) {\n            const direction = memory.readWord(registers.PC);\n            registers.PC += 3;\n            if (registers.getFlag(flag)) {\n                registers.SP--;\n                memory.write((registers.PC & 0xFF00) >> 8, registers.SP);\n                registers.SP--;\n                memory.write(registers.PC & 0x00FF, registers.SP);\n                registers.PC = direction;\n                return 17;\n            }\n            return 10;\n        },\n        PUSH_RR: function (registers: Registers, memory: Memory, reg: string) {\n            const value = registers.getReg(reg);\n            registers.SP--;\n            memory.write(((value & 0xFF00) >> 8), registers.SP);\n            registers.SP--;\n            memory.write(value & 0x00FF, registers.SP);\n            registers.PC += 1;\n            return 11;\n        },\n        POP_RR: function (registers: Registers, memory: Memory, reg: string) {\n            const low = memory.read(registers.SP);\n            registers.SP++;\n            const high = memory.read(registers.SP);\n            registers.SP++;\n            registers.setReg(reg, (high << 8) | low);\n            registers.PC += 1;\n            return 11;\n        },\n        RET_CC0_ADR: function (registers: Registers, memory: Memory, flag: string) {\n            registers.PC += 1;\n            if (!registers.getFlag(flag)) {\n                const low = memory.read(registers.SP);\n                registers.SP++;\n                const high = memory.read(registers.SP);\n                registers.SP++;\n                registers.PC = (high << 8) | low;\n                return 11;\n            }\n            return 5;\n        },\n        RET_CC1_ADR: function (registers: Registers, memory: Memory, flag: string) {\n            registers.PC += 1;\n            if (registers.getFlag(flag)) {\n                const low = memory.read(registers.SP);\n                registers.SP++;\n                const high = memory.read(registers.SP);\n                registers.SP++;\n                registers.PC = (high << 8) | low;\n                return 11;\n            }\n            return 5;\n        },\n        RET_ADR: function (registers: Registers, memory: Memory) {\n            registers.PC += 1;\n            const low = memory.read(registers.SP);\n            registers.SP++;\n            const high = memory.read(registers.SP);\n            registers.SP++;\n            registers.PC = (high << 8) | low;\n            return 10;\n        },\n        RETI: function (registers: Registers, memory: Memory) {\n            registers.PC += 1;\n            const low = memory.read(registers.SP);\n            registers.SP++;\n            const high = memory.read(registers.SP);\n            registers.SP++;\n            registers.PC = (high << 8) | low;\n            registers.flagIME = true;\n            return 10;\n        },\n        RST: function (registers: Registers, memory: Memory, direction: number) {\n            registers.PC += 1;\n            registers.SP--;\n            memory.write((registers.PC & 0xFF00) >> 8, registers.SP);\n            registers.SP--;\n            memory.write(registers.PC & 0x00FF, registers.SP);\n            registers.PC = direction;\n            return 11;\n        }\n    },\n    ADD: {\n        DEC_R: function (registers: Registers, reg: string) {\n            const value = registers.getReg(reg);\n            const result = (value - 1) & 0xFF;\n            registers.flagZ = result === 0;\n            registers.flagH = ((((value & 0xF) - 1) >> 4) & 1) === 1;\n            registers.flagN = true;\n            registers.setReg(reg, result);\n            registers.PC += 1;\n            return 4;\n        },\n        DEC_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction);\n            const result = (value - 1) & 0xFF;\n            registers.flagZ = result === 0;\n            registers.flagH = ((((value & 0xF) - 1) >> 4) & 1) === 1;\n            registers.flagN = true;\n            memory.write(result, direction);\n            registers.PC += 1;\n            return 11;\n        },\n        INC_R: function (registers: Registers, reg: string) {\n            const value = registers.getReg(reg);\n            const result = (value + 1) & 0xFF;\n            registers.flagZ = result === 0;\n            registers.flagH = ((value & 0xF) + 1 >> 4) === 0;\n            registers.flagN = false;\n            registers.setReg(reg, result);\n            registers.PC += 1;\n            return 4;\n        },\n        INC_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const direction = registers.getReg(reg);\n            const value = memory.read(direction);\n            const result = (value + 1) & 0xFF;\n            registers.flagZ = result === 0;\n            registers.flagH = ((value & 0xF) + 1 >> 4) === 0;\n            registers.flagN = false;\n            memory.write(result, direction);\n            registers.PC += 1;\n            return 11;\n        },\n        DEC_RR: function (registers: Registers, reg: string) {\n            registers.setReg(reg, (registers.getReg(reg) - 1) & 0xFFFF);\n            registers.PC += 1;\n            return 6;\n        },\n        INC_RR: function (registers: Registers, reg: string) {\n            registers.setReg(reg, (registers.getReg(reg) + 1) & 0xFFFF);\n            registers.PC += 1;\n            return 6;\n        },\n        ADD_R_R: function (registers: Registers, destiny: string, origin: string) {\n            const valueOrigin = registers.getReg(origin);\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueOrigin + valueDestiny;\n            registers.flagZ = (value & 0xFF) === 0;\n            registers.flagH = (valueDestiny & 0x0F) + (valueOrigin & 0x0F) > 0x0F;\n            registers.flagC = value > 0xFF;\n            registers.flagN = false;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        ADD_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            const valueOrigin = memory.read(registers.getReg(origin));\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueOrigin + valueDestiny;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) + (valueOrigin & 0x0F) > 0x0F;\n            registers.flagC = value > 0xFF;\n            registers.flagN = false;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 7;\n        },\n        ADD_RR_RR: function (registers: Registers, destiny: string, origin: string) {\n            const valueOrigin = registers.getReg(origin);\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueOrigin + valueDestiny;\n            registers.flagH = (valueDestiny & 0x0FFF) + (valueOrigin & 0x0FFF) > 0x0FFF;\n            registers.flagC = value > 0xFFFF;\n            registers.flagN = false;\n            registers.setReg(destiny, value & 0xFFFF);\n            registers.PC += 1;\n            return 11;\n        },\n        ADD_R_NN: function (registers: Registers, memory: Memory, reg: string) {\n            let value = memory.read(registers.PC + 1);\n            if (value > 127) value -= 256;\n            const result = registers.getReg(reg) + value;\n            registers.setFlags(0);\n            registers.flagC = result > 0xFFFF;\n            registers.setReg(reg, result & 0xFFFF);\n            registers.PC += 2;\n            return 7;\n        },\n        ADD_R_N: function (registers: Registers, memory: Memory, reg: string) {\n            const value = memory.read(registers.PC + 1);\n            const result = registers.getReg(reg) + value;\n            registers.flagZ = (result & 0xFF) == 0;\n            registers.flagC = result > 0xFFFF;\n            registers.flagH = (result & 0x0F) + (value & 0x0F) > 0x0F;\n            registers.flagN = false;\n            registers.setReg(reg, result & 0xFF);\n            registers.PC += 2;\n            return 7;\n        },\n        CP_R: function (registers: Registers, reg: string) {\n            const value = registers.getReg(reg);\n            registers.flagZ = registers.A == value;\n            registers.flagC = registers.A < value;\n            registers.flagH = (registers.A & 0x0F) < (value & 0x0F);\n            registers.flagN = true;\n            registers.PC += 1;\n            return 4;\n        },\n        CP_RADR: function (registers: Registers, memory: Memory, reg: string) {\n            const value = memory.read(registers.getReg(reg));\n            registers.flagZ = registers.A == value;\n            registers.flagC = registers.A < value;\n            registers.flagH = (registers.A & 0x0F) < (value & 0x0F);\n            registers.flagN = true;\n            registers.PC += 1;\n            return 7;\n        },\n        CP_N: function (registers: Registers, memory: Memory) {\n            const value = memory.read(registers.PC + 1);\n            registers.flagZ = registers.A == value;\n            registers.flagC = registers.A < value;\n            registers.flagH = (registers.A & 0x0F) < (value & 0x0F);\n            registers.flagN = true;\n            registers.PC += 2;\n            return 7;\n        },\n        SBC_R_R: function (registers: Registers, destiny: string, origin: string) {\n            const valueOrigin = registers.getReg(origin);\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueDestiny - valueOrigin - (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) < ((valueOrigin - (registers.flagC ? 1 : 0)) & 0x0F);\n            registers.flagC = value < 0;\n            registers.flagN = true;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        SUB_R_R: function (registers: Registers, destiny: string, origin: string) {\n            const valueOrigin = registers.getReg(origin);\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueDestiny - valueOrigin;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) < (valueOrigin & 0x0F);\n            registers.flagC = value < 0;\n            registers.flagN = true;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        SUB_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            const valueOrigin = memory.read(registers.getReg(origin));\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueDestiny - valueOrigin;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) < (valueOrigin & 0x0F);\n            registers.flagC = value < 0;\n            registers.flagN = true;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        SBC_R_N: function (registers: Registers, memory: Memory, reg: string) {\n            const valueOrigin = memory.read(registers.PC + 1);\n            const valueDestiny = registers.getReg(reg);\n            const value = valueDestiny - valueOrigin - (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) < ((valueOrigin - (registers.flagC ? 1 : 0)) & 0x0F);\n            registers.flagC = value < 0;\n            registers.flagN = true;\n            registers.setReg(reg, value & 0xFF);\n            registers.PC += 2;\n            return 4;\n        },\n        ADC_R_R: function (registers: Registers, destiny: string, origin: string) {\n            const valueOrigin = registers.getReg(origin);\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueDestiny + valueOrigin + (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) + (valueOrigin & 0x0F) + (registers.flagC ? 1 : 0) > 0x0F;\n            registers.flagC = value < 0;\n            registers.flagN = false;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        ADC_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            const valueOrigin = memory.read(registers.getReg(origin));\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueDestiny + valueOrigin + (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) + (valueOrigin & 0x0F) + (registers.flagC ? 1 : 0) > 0x0F;\n            registers.flagC = value > 0xFF;\n            registers.flagN = false;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        ADC_R_N: function (registers: Registers, memory: Memory, reg: string) {\n            const valueOrigin = memory.read(registers.PC + 1);\n            const valueDestiny = registers.getReg(reg);\n            const value = valueDestiny + valueOrigin + (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) + (valueOrigin & 0x0F) + (registers.flagC ? 1 : 0) > 0x0F;\n            registers.flagC = value < 0;\n            registers.flagN = false;\n            registers.setReg(reg, value & 0xFF);\n            registers.PC += 2;\n            return 4;\n        },\n        SUB_R_N: function (registers: Registers, memory: Memory, reg: string) {\n            const valueOrigin = memory.read(registers.PC + 1);\n            const valueDestiny = registers.getReg(reg);\n            const value = valueDestiny - valueOrigin;\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) < (valueOrigin & 0x0F);\n            registers.flagC = value < 0;\n            registers.flagN = true;\n            registers.setReg(reg, value & 0xFF);\n            registers.PC += 2;\n            return 4;\n        },\n        SBC_R_RADR: function (registers: Registers, memory: Memory, destiny: string, origin: string) {\n            const valueOrigin = memory.read(registers.getReg(origin));\n            const valueDestiny = registers.getReg(destiny);\n            const value = valueDestiny - valueOrigin - (registers.flagC ? 1 : 0);\n            registers.flagZ = (value & 0xFF) == 0;\n            registers.flagH = (valueDestiny & 0x0F) < ((valueOrigin - (registers.flagC ? 1 : 0)) & 0x0F);\n            registers.flagC = value < 0;\n            registers.flagN = true;\n            registers.setReg(destiny, value & 0xFF);\n            registers.PC += 1;\n            return 4;\n        },\n        DAA: function (registers: Registers) {\n            let result = registers.A;\n            let correction = 0;\n        \n            if (registers.flagH) correction |= 0x06;\n            if (registers.flagC) correction |= 0x60;\n            if (registers.flagN) {\n              if ((result & 0x0F) > 0x09) correction |= 0x06;\n              if (result > 0x99) correction |= 0x60;\n              result += correction;\n            } else {\n              result -= correction;\n            }\n\n            registers.flagZ = (result & 0xFF) == 0;\n            registers.flagC = (correction & 0x60) !== 0;\n            registers.flagH = false;\n\n            registers.A = result & 0xFF;\n            registers.PC += 1;\n            return 4;\n        }\n    }\n}\n\nexport const OPCODES: InstructionSet = {\n    0x00: (registers: Registers, memory: Memory) => OPS.NOP(registers),\n    0x01: (registers: Registers, memory: Memory) => OPS.LD.LD_DD_NN(registers, memory, 'BC'),\n    0x02: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'BC', 'A'),\n    0x03: (registers: Registers, memory: Memory) => OPS.ADD.INC_RR(registers, 'BC'),\n    0x04: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'B'),\n    0x05: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'B'),\n    0x06: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'B'),\n    0x07: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'A', false),\n    0x08: (registers: Registers, memory: Memory) => OPS.LD.LD_ADR_RR(registers, memory, 'SP'),\n    0x09: (registers: Registers, memory: Memory) => OPS.ADD.ADD_RR_RR(registers, 'HL', 'BC'),\n    0x0A: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'A', 'BC'),\n    0x0B: (registers: Registers, memory: Memory) => OPS.ADD.DEC_RR(registers, 'BC'),\n    0x0C: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'C'),\n    0x0D: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'C'),\n    0x0E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'C'),\n    0x0F: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'A', false),\n\n    0x10: (registers: Registers, memory: Memory) => OPS.INT.STOP(registers),\n    0x11: (registers: Registers, memory: Memory) => OPS.LD.LD_DD_NN(registers, memory, 'DE'),\n    0x12: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'DE', 'A'),\n    0x13: (registers: Registers, memory: Memory) => OPS.ADD.INC_RR(registers, 'DE'),\n    0x14: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'D'),\n    0x15: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'D'),\n    0x16: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'D'),\n    0x17: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'A', false),\n    0x18: (registers: Registers, memory: Memory) => OPS.JUMP.JR_N(registers, memory),\n    0x19: (registers: Registers, memory: Memory) => OPS.ADD.ADD_RR_RR(registers, 'HL', 'DE'),\n    0x1A: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'A', 'DE'),\n    0x1B: (registers: Registers, memory: Memory) => OPS.ADD.DEC_RR(registers, 'DE'),\n    0x1C: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'E'),\n    0x1D: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'E'),\n    0x1E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'E'),\n    0x1F: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'A', false),\n\n    0x20: (registers: Registers, memory: Memory) => OPS.JUMP.JR_CC0_N(registers, memory, 'Z'),\n    0x21: (registers: Registers, memory: Memory) => OPS.LD.LD_DD_NN(registers, memory, 'HL'),\n    0x22: (registers: Registers, memory: Memory) => OPS.LD.LDI_RADR_R(registers, memory, 'HL', 'A'),\n    0x23: (registers: Registers, memory: Memory) => OPS.ADD.INC_RR(registers, 'HL'),\n    0x24: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'H'),\n    0x25: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'H'),\n    0x26: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'H'),\n    0x27: (registers: Registers, memory: Memory) => OPS.ADD.DAA(registers),\n    0x28: (registers: Registers, memory: Memory) => OPS.JUMP.JR_CC1_N(registers, memory, 'Z'),\n    0x29: (registers: Registers, memory: Memory) => OPS.ADD.ADD_RR_RR(registers, 'HL', 'HL'),\n    0x2A: (registers: Registers, memory: Memory) => OPS.LD.LDI_R_RADR(registers, memory, 'A', 'HL'),\n    0x2B: (registers: Registers, memory: Memory) => OPS.ADD.DEC_RR(registers, 'HL'),\n    0x2C: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'L'),\n    0x2D: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'L'),\n    0x2E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'L'),\n    0x2F: (registers: Registers, memory: Memory) => OPS.COMP.CPL(registers),\n\n    0x30: (registers: Registers, memory: Memory) => OPS.JUMP.JR_CC0_N(registers, memory, 'C'),\n    0x31: (registers: Registers, memory: Memory) => OPS.LD.LD_DD_NN(registers, memory, 'SP'),\n    0x32: (registers: Registers, memory: Memory) => OPS.LD.LDD_RADR_R(registers, memory, 'HL', 'A'),\n    0x33: (registers: Registers, memory: Memory) => OPS.ADD.INC_RR(registers, 'SP'),\n    0x34: (registers: Registers, memory: Memory) => OPS.ADD.INC_RADR(registers, memory, 'HL'),\n    0x35: (registers: Registers, memory: Memory) => OPS.ADD.DEC_RADR(registers, memory, 'HL'),\n    0x36: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_N(registers, memory, 'HL'),\n    0x37: (registers: Registers, memory: Memory) => OPS.COMP.SCF(registers),\n    0x38: (registers: Registers, memory: Memory) => OPS.JUMP.JR_CC1_N(registers, memory, 'C'),\n    0x39: (registers: Registers, memory: Memory) => OPS.ADD.ADD_RR_RR(registers, 'HL', 'SP'),\n    0x3A: (registers: Registers, memory: Memory) => OPS.LD.LDD_R_RADR(registers, memory, 'A', 'HL'),\n    0x3B: (registers: Registers, memory: Memory) => OPS.ADD.DEC_RR(registers, 'SP'),\n    0x3C: (registers: Registers, memory: Memory) => OPS.ADD.INC_R(registers, 'A'),\n    0x3D: (registers: Registers, memory: Memory) => OPS.ADD.DEC_R(registers, 'A'),\n    0x3E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_N(registers, memory, 'A'),\n    0x3F: (registers: Registers, memory: Memory) => OPS.COMP.CCF(registers),\n\n    0x40: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'B'),\n    0x41: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'C'),\n    0x42: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'D'),\n    0x43: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'E'),\n    0x44: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'H'),\n    0x45: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'L'),\n    0x46: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'B', 'HL'),\n    0x47: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'B', 'A'),\n    0x48: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'B'),\n    0x49: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'C'),\n    0x4A: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'D'),\n    0x4B: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'E'),\n    0x4C: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'H'),\n    0x4D: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'L'),\n    0x4E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'C', 'HL'),\n    0x4F: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'C', 'A'),\n\n    0x50: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'B'),\n    0x51: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'C'),\n    0x52: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'D'),\n    0x53: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'E'),\n    0x54: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'H'),\n    0x55: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'L'),\n    0x56: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'D', 'HL'),\n    0x57: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'D', 'A'),\n    0x58: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'B'),\n    0x59: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'C'),\n    0x5A: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'D'),\n    0x5B: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'E'),\n    0x5C: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'H'),\n    0x5D: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'L'),\n    0x5E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'E', 'HL'),\n    0x5F: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'E', 'A'),\n\n    0x60: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'B'),\n    0x61: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'C'),\n    0x62: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'D'),\n    0x63: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'E'),\n    0x64: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'H'),\n    0x65: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'L'),\n    0x66: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'H', 'HL'),\n    0x67: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'H', 'A'),\n    0x68: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'B'),\n    0x69: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'C'),\n    0x6A: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'D'),\n    0x6B: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'E'),\n    0x6C: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'H'),\n    0x6D: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'L'),\n    0x6E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'L', 'HL'),\n    0x6F: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'L', 'A'),\n\n    0x70: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'B'),\n    0x71: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'C'),\n    0x72: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'D'),\n    0x73: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'E'),\n    0x74: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'H'),\n    0x75: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'L'),\n    0x76: (registers: Registers, memory: Memory) => OPS.INT.HALT(registers, memory),\n    0x77: (registers: Registers, memory: Memory) => OPS.LD.LD_RADR_R(registers, memory, 'HL', 'A'),\n    0x78: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'B'),\n    0x79: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'C'),\n    0x7A: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'D'),\n    0x7B: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'E'),\n    0x7C: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'H'),\n    0x7D: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'L'),\n    0x7E: (registers: Registers, memory: Memory) => OPS.LD.LD_R_RADR(registers, memory, 'A', 'HL'),\n    0x7F: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'A', 'A'),\n\n    0x80: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'B'),\n    0x81: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'C'),\n    0x82: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'D'),\n    0x83: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'E'),\n    0x84: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'H'),\n    0x85: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'L'),\n    0x86: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_RADR(registers, memory, 'A', 'HL'),\n    0x87: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_R(registers, 'A', 'A'),\n    0x88: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'B'),\n    0x89: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'C'),\n    0x8A: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'D'),\n    0x8B: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'E'),\n    0x8C: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'H'),\n    0x8D: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'L'),\n    0x8E: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_RADR(registers, memory, 'A', 'HL'),\n    0x8F: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_R(registers, 'A', 'A'),\n\n    0x90: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'B'),\n    0x91: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'C'),\n    0x92: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'D'),\n    0x93: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'E'),\n    0x94: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'H'),\n    0x95: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'L'),\n    0x96: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_RADR(registers, memory, 'A', 'HL'),\n    0x97: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_R(registers, 'A', 'A'),\n    0x98: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'B'),\n    0x99: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'C'),\n    0x9A: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'D'),\n    0x9B: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'E'),\n    0x9C: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'H'),\n    0x9D: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'L'),\n    0x9E: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_RADR(registers, memory, 'A', 'HL'),\n    0x9F: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_R(registers, 'A', 'A'),\n\n    0xA0: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'B'),\n    0xA1: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'C'),\n    0xA2: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'D'),\n    0xA3: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'E'),\n    0xA4: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'H'),\n    0xA5: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'L'),\n    0xA6: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_RADR(registers, memory, 'HL'),\n    0xA7: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_R(registers, 'A'),\n    0xA8: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'B'),\n    0xA9: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'C'),\n    0xAA: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'D'),\n    0xAB: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'E'),\n    0xAC: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'H'),\n    0xAD: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'L'),\n    0xAE: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_RADR(registers, memory, 'HL'),\n    0xAF: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_R(registers, 'A'),\n\n    0xB0: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'B'),\n    0xB1: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'C'),\n    0xB2: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'D'),\n    0xB3: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'E'),\n    0xB4: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'H'),\n    0xB5: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'L'),\n    0xB6: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_ADR(registers, memory, 'HL'),\n    0xB7: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_R_R(registers, 'A'),\n    0xB8: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'B'),\n    0xB9: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'C'),\n    0xBA: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'D'),\n    0xBB: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'E'),\n    0xBC: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'H'),\n    0xBD: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'L'),\n    0xBE: (registers: Registers, memory: Memory) => OPS.ADD.CP_RADR(registers, memory, 'HL'),\n    0xBF: (registers: Registers, memory: Memory) => OPS.ADD.CP_R(registers, 'A'),\n\n    0xC0: (registers: Registers, memory: Memory) => OPS.JUMP.RET_CC0_ADR(registers, memory, 'Z'),\n    0xC1: (registers: Registers, memory: Memory) => OPS.JUMP.POP_RR(registers, memory, 'BC'),\n    0xC2: (registers: Registers, memory: Memory) => OPS.JUMP.JP_CC0_ADR(registers, memory, 'Z'),\n    0xC3: (registers: Registers, memory: Memory) => OPS.JUMP.JP_ADR(registers, memory),\n    0xC4: (registers: Registers, memory: Memory) => OPS.JUMP.CALL_CC0_ADR(registers, memory, 'Z'),\n    0xC5: (registers: Registers, memory: Memory) => OPS.JUMP.PUSH_RR(registers, memory, 'BC'),\n    0xC6: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_N(registers, memory, 'A'),\n    0xC7: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x00),\n    0xC8: (registers: Registers, memory: Memory) => OPS.JUMP.RET_CC1_ADR(registers, memory, 'Z'),\n    0xC9: (registers: Registers, memory: Memory) => OPS.JUMP.RET_ADR(registers, memory),\n    0xCA: (registers: Registers, memory: Memory) => OPS.JUMP.JP_CC1_ADR(registers, memory, 'Z'),\n    // 0xCB:\n    0xCC: (registers: Registers, memory: Memory) => OPS.JUMP.CALL_CC1_ADR(registers, memory, 'Z'),\n    0xCD: (registers: Registers, memory: Memory) => OPS.JUMP.CALL_ADR(registers, memory),\n    0xCE: (registers: Registers, memory: Memory) => OPS.ADD.ADC_R_N(registers, memory, 'A'),\n    0xCF: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x08),\n\n    0xD0: (registers: Registers, memory: Memory) => OPS.JUMP.RET_CC0_ADR(registers, memory, 'C'),\n    0xD1: (registers: Registers, memory: Memory) => OPS.JUMP.POP_RR(registers, memory, 'DE'),\n    0xD2: (registers: Registers, memory: Memory) => OPS.JUMP.JP_CC0_ADR(registers, memory, 'C'),\n    // 0xD3: \n    0xD4: (registers: Registers, memory: Memory) => OPS.JUMP.CALL_CC0_ADR(registers, memory, 'C'),\n    0xD5: (registers: Registers, memory: Memory) => OPS.JUMP.PUSH_RR(registers, memory, 'DE'),\n    0xD6: (registers: Registers, memory: Memory) => OPS.ADD.SUB_R_N(registers, memory, 'A'),\n    0xD7: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x10),\n    0xD8: (registers: Registers, memory: Memory) => OPS.JUMP.RET_CC1_ADR(registers, memory, 'C'),\n    0xD9: (registers: Registers, memory: Memory) => OPS.JUMP.RETI(registers, memory),\n    0xDA: (registers: Registers, memory: Memory) => OPS.JUMP.JP_CC1_ADR(registers, memory, 'C'),\n    // 0xDB:\n    0xDC: (registers: Registers, memory: Memory) => OPS.JUMP.CALL_CC1_ADR(registers, memory, 'C'),\n    // 0xDD: \n    0xDE: (registers: Registers, memory: Memory) => OPS.ADD.SBC_R_N(registers, memory, 'A'),\n    0xDF: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x18),\n\n    0xE0: (registers: Registers, memory: Memory) => OPS.LD.LD_DADR_R(registers, memory, 'A'),\n    0xE1: (registers: Registers, memory: Memory) => OPS.JUMP.POP_RR(registers, memory, 'HL'),\n    0xE2: (registers: Registers, memory: Memory) => OPS.LD.LD_DR_R(registers, memory, 'C', 'A'),\n    // 0xE3: \n    // 0xE4:\n    0xE5: (registers: Registers, memory: Memory) => OPS.JUMP.PUSH_RR(registers, memory, 'HL'),\n    0xE6: (registers: Registers, memory: Memory) => OPS.LOGIC.AND_R_N(registers, memory),\n    0xE7: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x20),\n    0xE8: (registers: Registers, memory: Memory) => OPS.ADD.ADD_R_NN(registers, memory, 'SP'),\n    0xE9: (registers: Registers, memory: Memory) => OPS.JUMP.JP_RADR(registers, 'HL'),\n    0xEA: (registers: Registers, memory: Memory) => OPS.LD.LD_ADR_R(registers, memory, 'A'),\n    // 0xEB:\n    // 0xEC:\n    // 0xED: \n    0xEE: (registers: Registers, memory: Memory) => OPS.LOGIC.XOR_N(registers, memory),\n    0xEF: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x28),\n\n    0xF0: (registers: Registers, memory: Memory) => OPS.LD.LD_R_DADR(registers, memory, 'A'),\n    0xF1: (registers: Registers, memory: Memory) => OPS.JUMP.POP_RR(registers, memory, 'AF'),\n    0xF2: (registers: Registers, memory: Memory) => OPS.LD.LD_R_DR(registers, memory, 'A', 'C'),\n    0xF3: (registers: Registers, memory: Memory) => OPS.INT.DI(registers),\n    // 0xF4: \n    0xF5: (registers: Registers, memory: Memory) => OPS.JUMP.PUSH_RR(registers, memory, 'AF'),\n    0xF6: (registers: Registers, memory: Memory) => OPS.LOGIC.OR_N(registers, memory),\n    0xF7: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x30),\n    0xF8: (registers: Registers, memory: Memory) => OPS.LD.LD_R_SPD(registers, memory, 'HL'),\n    0xF9: (registers: Registers, memory: Memory) => OPS.LD.LD_R_R(registers, 'SP', 'HL'),\n    0xFA: (registers: Registers, memory: Memory) => OPS.LD.LD_R_ADR(registers, memory, 'A'),\n    0xFB: (registers: Registers, memory: Memory) => OPS.INT.EI(registers),\n    // 0xFC: \n    // 0xFD:\n    0xFE: (registers: Registers, memory: Memory) => OPS.ADD.CP_N(registers, memory),\n    0xFF: (registers: Registers, memory: Memory) => OPS.JUMP.RST(registers, memory, 0x38)\n}\n\nexport const OPCODES_CB: InstructionSet = {\n    0x00: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'B', true),\n    0x01: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'C', true),\n    0x02: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'D', true),\n    0x03: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'E', true),\n    0x04: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'H', true),\n    0x05: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'L', true),\n    0x06: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC_RADR(registers, memory, 'HL'),\n    0x07: (registers: Registers, memory: Memory) => OPS.SHIFT.RLC(registers, 'A', true),\n    0x08: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'B', true),\n    0x09: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'C', true),\n    0x0A: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'D', true),\n    0x0B: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'E', true),\n    0x0C: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'H', true),\n    0x0D: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'L', true),\n    0x0E: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC_RADR(registers, memory, 'HL'),\n    0x0F: (registers: Registers, memory: Memory) => OPS.SHIFT.RRC(registers, 'A', true),\n\n    0x10: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'B', true),\n    0x11: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'C', true),\n    0x12: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'D', true),\n    0x13: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'E', true),\n    0x14: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'H', true),\n    0x15: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'L', true),\n    0x16: (registers: Registers, memory: Memory) => OPS.SHIFT.RL_RADR(registers, memory, 'HL'),\n    0x17: (registers: Registers, memory: Memory) => OPS.SHIFT.RL(registers, 'A', true),\n    0x18: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'B', true),\n    0x19: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'C', true),\n    0x1A: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'D', true),\n    0x1B: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'E', true),\n    0x1C: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'H', true),\n    0x1D: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'L', true),\n    0x1E: (registers: Registers, memory: Memory) => OPS.SHIFT.RR_RADR(registers, memory, 'HL'),\n    0x1F: (registers: Registers, memory: Memory) => OPS.SHIFT.RR(registers, 'A', true),\n\n    0x20: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'B'),\n    0x21: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'C'),\n    0x22: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'D'),\n    0x23: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'E'),\n    0x24: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'H'),\n    0x25: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'L'),\n    0x26: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA_RADR(registers, memory, 'HL'),\n    0x27: (registers: Registers, memory: Memory) => OPS.SHIFT.SLA(registers, 'A'),\n    0x28: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'B'),\n    0x29: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'C'),\n    0x2A: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'D'),\n    0x2B: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'E'),\n    0x2C: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'H'),\n    0x2D: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'L'),\n    0x2E: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA_RADR(registers, memory, 'HL'),\n    0x2F: (registers: Registers, memory: Memory) => OPS.SHIFT.SRA(registers, 'A'),\n\n    0x30: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'B'),\n    0x31: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'C'),\n    0x32: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'D'),\n    0x33: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'E'),\n    0x34: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'H'),\n    0x35: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'L'),\n    0x36: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_RADR(registers, memory, 'HL'),\n    0x37: (registers: Registers, memory: Memory) => OPS.BIT.SWAP_R(registers, 'A'),\n    0x38: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'B'),\n    0x39: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'C'),\n    0x3A: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'D'),\n    0x3B: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'E'),\n    0x3C: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'H'),\n    0x3D: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'L'),\n    0x3E: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL_RADR(registers, memory, 'HL'),\n    0x3F: (registers: Registers, memory: Memory) => OPS.SHIFT.SRL(registers, 'A'),\n\n    0x40: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'B'),\n    0x41: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'C'),\n    0x42: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'D'),\n    0x43: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'E'),\n    0x44: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'H'),\n    0x45: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'L'),\n    0x46: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x01, 'HL'),\n    0x47: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x01, 'A'),\n    0x48: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'B'),\n    0x49: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'C'),\n    0x4A: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'D'),\n    0x4B: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'E'),\n    0x4C: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'H'),\n    0x4D: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'L'),\n    0x4E: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x02, 'HL'),\n    0x4F: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x02, 'A'),\n\n    0x50: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'B'),\n    0x51: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'C'),\n    0x52: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'D'),\n    0x53: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'E'),\n    0x54: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'H'),\n    0x55: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'L'),\n    0x56: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x04, 'HL'),\n    0x57: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x04, 'A'),\n    0x58: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'B'),\n    0x59: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'C'),\n    0x5A: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'D'),\n    0x5B: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'E'),\n    0x5C: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'H'),\n    0x5D: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'L'),\n    0x5E: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x08, 'HL'),\n    0x5F: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x08, 'A'),\n\n    0x60: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'B'),\n    0x61: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'C'),\n    0x62: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'D'),\n    0x63: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'E'),\n    0x64: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'H'),\n    0x65: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'L'),\n    0x66: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x10, 'HL'),\n    0x67: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x10, 'A'),\n    0x68: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'B'),\n    0x69: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'C'),\n    0x6A: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'D'),\n    0x6B: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'E'),\n    0x6C: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'H'),\n    0x6D: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'L'),\n    0x6E: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x20, 'HL'),\n    0x6F: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x20, 'A'),\n\n    0x70: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'B'),\n    0x71: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'C'),\n    0x72: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'D'),\n    0x73: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'E'),\n    0x74: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'H'),\n    0x75: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'L'),\n    0x76: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x40, 'HL'),\n    0x77: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x40, 'A'),\n    0x78: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'B'),\n    0x79: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'C'),\n    0x7A: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'D'),\n    0x7B: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'E'),\n    0x7C: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'H'),\n    0x7D: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'L'),\n    0x7E: (registers: Registers, memory: Memory) => OPS.BIT.BIT_RADR(registers, memory, 0x80, 'HL'),\n    0x7F: (registers: Registers, memory: Memory) => OPS.BIT.BIT_R(registers, 0x80, 'A'),\n\n    0x80: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'B'),\n    0x81: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'C'),\n    0x82: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'D'),\n    0x83: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'E'),\n    0x84: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'H'),\n    0x85: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'L'),\n    0x86: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x01, 'HL'),\n    0x87: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x01, 'A'),\n    0x88: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'B'),\n    0x89: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'C'),\n    0x8A: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'D'),\n    0x8B: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'E'),\n    0x8C: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'H'),\n    0x8D: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'L'),\n    0x8E: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x02, 'HL'),\n    0x8F: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x02, 'A'),\n\n    0x90: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'B'),\n    0x91: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'C'),\n    0x92: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'D'),\n    0x93: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'E'),\n    0x94: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'H'),\n    0x95: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'L'),\n    0x96: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x04, 'HL'),\n    0x97: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x04, 'A'),\n    0x98: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'B'),\n    0x99: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'C'),\n    0x9A: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'D'),\n    0x9B: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'E'),\n    0x9C: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'H'),\n    0x9D: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'L'),\n    0x9E: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x08, 'HL'),\n    0x9F: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x08, 'A'),\n\n    0xA0: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'B'),\n    0xA1: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'C'),\n    0xA2: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'D'),\n    0xA3: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'E'),\n    0xA4: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'H'),\n    0xA5: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'L'),\n    0xA6: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x10, 'HL'),\n    0xA7: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x10, 'A'),\n    0xA8: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'B'),\n    0xA9: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'C'),\n    0xAA: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'D'),\n    0xAB: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'E'),\n    0xAC: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'H'),\n    0xAD: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'L'),\n    0xAE: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x20, 'HL'),\n    0xAF: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x20, 'A'),\n\n    0xB0: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'B'),\n    0xB1: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'C'),\n    0xB2: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'D'),\n    0xB3: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'E'),\n    0xB4: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'H'),\n    0xB5: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'L'),\n    0xB6: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x40, 'HL'),\n    0xB7: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x40, 'A'),\n    0xB8: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'B'),\n    0xB9: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'C'),\n    0xBA: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'D'),\n    0xBB: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'E'),\n    0xBC: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'H'),\n    0xBD: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'L'),\n    0xBE: (registers: Registers, memory: Memory) => OPS.BIT.RES_RADR(registers, memory, 0x80, 'HL'),\n    0xBF: (registers: Registers, memory: Memory) => OPS.BIT.RES_R(registers, 0x80, 'A'),\n\n    0xC0: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'B'),\n    0xC1: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'C'),\n    0xC2: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'D'),\n    0xC3: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'E'),\n    0xC4: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'H'),\n    0xC5: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'L'),\n    0xC6: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x01, 'HL'),\n    0xC7: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x01, 'A'),\n    0xC8: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'B'),\n    0xC9: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'C'),\n    0xCA: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'D'),\n    0xCB: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'E'),\n    0xCC: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'H'),\n    0xCD: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'L'),\n    0xCE: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x02, 'HL'),\n    0xCF: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x02, 'A'),\n\n    0xD0: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'B'),\n    0xD1: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'C'),\n    0xD2: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'D'),\n    0xD3: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'E'),\n    0xD4: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'H'),\n    0xD5: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'L'),\n    0xD6: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x04, 'HL'),\n    0xD7: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x04, 'A'),\n    0xD8: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'B'),\n    0xD9: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'C'),\n    0xDA: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'D'),\n    0xDB: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'E'),\n    0xDC: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'H'),\n    0xDD: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'L'),\n    0xDE: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x08, 'HL'),\n    0xDF: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x08, 'A'),\n\n    0xE0: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'B'),\n    0xE1: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'C'),\n    0xE2: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'D'),\n    0xE3: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'E'),\n    0xE4: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'H'),\n    0xE5: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'L'),\n    0xE6: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x10, 'HL'),\n    0xE7: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x10, 'A'),\n    0xE8: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'B'),\n    0xE9: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'C'),\n    0xEA: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'D'),\n    0xEB: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'E'),\n    0xEC: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'H'),\n    0xED: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'L'),\n    0xEE: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x20, 'HL'),\n    0xEF: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x20, 'A'),\n\n    0xF0: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'B'),\n    0xF1: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'C'),\n    0xF2: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'D'),\n    0xF3: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'E'),\n    0xF4: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'H'),\n    0xF5: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'L'),\n    0xF6: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x40, 'HL'),\n    0xF7: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x40, 'A'),\n    0xF8: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'B'),\n    0xF9: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'C'),\n    0xFA: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'D'),\n    0xFB: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'E'),\n    0xFC: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'H'),\n    0xFD: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'L'),\n    0xFE: (registers: Registers, memory: Memory) => OPS.BIT.SET_RADR(registers, memory, 0x80, 'HL'),\n    0xFF: (registers: Registers, memory: Memory) => OPS.BIT.SET_R(registers, 0x80, 'A'),\n\n}\n","import { Memory } from \"./memory\";\nimport { Registers } from \"./registers\";\nimport { Constants } from \"../util/constants\";\nimport { GPU } from \"./gpu\";\nimport { OPCODES, OPCODES_CB, Instruction } from \"./instructions\";\n\nexport class CPU {\n\n    // Array con el numero de ciclos transcurridos desde cada ultima interrupcion\n    private cycles: number[];\n\n    // Memoria principal\n    private memory: Memory;\n    // Registros internos de la CPU\n    private registers: Registers;\n    // Sistema de gestion grafica\n    private graphics: GPU;\n\n    constructor(memory: Memory, graphics: GPU) {\n        this.memory = memory;\n        this.registers = new Registers();\n        this.graphics = graphics;\n        this.cycles = new Array<number>(3);\n        this.reset();\n    }\n\n    // Asigna un valor por defecto a los registros y a ciertas direcciones de memoria\n    // Equivale a un reinicio fisico de la consola\n    public reset() {\n        this.cycles[0] = 0;\n        this.cycles[1] = 0;\n        this.cycles[2] = 0;\n\n        this.registers.reset();\n        this.memory.reset();\n    }\n\n    public run(): number {\n        // Ciclo principal: procesa instruccion, activa las interrupciones adecuadas simulando\n        // el hardware, y finalmente ejecuta las rutinas de tratamiento de interrupciones\n        const ticks = this.processInstruction();\n        this.checkInterruptions();\n        this.fireInterruptions();\n        return ticks;\n    }\n\n    // Activa las interrupciones adecuadas y simula su funcionamiento por hardware\n    private fireInterruptions() {\n        // Interrupcion TIMER\n        if ((this.memory.read(Constants.TIMER_CRTL) & 0x04) != 0) {\n            let timerMax: number = 0;\n            // Velocidad del temporizador\n            switch (this.memory.read(Constants.TIMER_CRTL) & 0x03) {\n                case 0: timerMax = Constants.CYCLES_TIMER_MODE0; break;\n                case 1: timerMax = Constants.CYCLES_TIMER_MODE1; break;\n                case 2: timerMax = Constants.CYCLES_TIMER_MODE2; break;\n                case 3: timerMax = Constants.CYCLES_TIMER_MODE3; break;\n            }\n            if (this.cycles[1] > timerMax) {\n                this.cycles[1] = 0;\n                this.memory.write(this.memory.read(Constants.TIMER_COUNT) + 1, Constants.TIMER_COUNT);\n                // Si desborda se activa la interrupcion y se reinicia el contador\n                if (this.memory.read(Constants.TIMER_COUNT) == 0xFF) {\n                    this.memory.write(this.memory.read(Constants.TIMER_RELOAD), Constants.TIMER_COUNT);\n                    this.memory.write(this.memory.read(Constants.INT_FLAG) | Constants.INT_TIMER, Constants.INT_FLAG);\n                }\n            }\n        }\n\n        // Registro DIV\n        if (this.cycles[0] > Constants.CYCLES_DIV) {\n            this.memory.write(this.memory.read(Constants.DIV_CNTR) + 1, Constants.DIV_CNTR);\n            this.cycles[0] = 0;\n        }\n\n        // Interrupcion LCDC\n        if (this.cycles[2] > Constants.CYCLES_LCD_MODE1) {\n            this.cycles[2] = 0;\n            // Aumento de linea de dibujo\n            if (this.memory.read(Constants.LCD_Y_LOC) == 0x99) this.memory.write(0, Constants.LCD_Y_LOC);\n            else this.memory.write(this.memory.read(Constants.LCD_Y_LOC) + 1, Constants.LCD_Y_LOC);\n\n            // Comparacion de linea\n            if (this.memory.read(Constants.LCD_Y_LOC) == this.memory.read(Constants.LCD_Y_COMP)) {\n                this.memory.write(this.memory.read(Constants.LCD_STAT) | 0x04, Constants.LCD_STAT);\n                if ((this.memory.read(Constants.LCD_STAT) & 0x40) > 0) this.memory.write(this.memory.read(Constants.INT_FLAG) | Constants.INT_LCDC, Constants.INT_FLAG);\n            } else { \n                this.memory.write(this.memory.read(Constants.LCD_STAT) & 0xFB, Constants.LCD_STAT);\n            }\n        }\n        if (this.memory.read(Constants.LCD_Y_LOC) < 144) {\n            // Modo 10 (Cuando se esta accediendo entre 0xFE00 y 0xFE9F)\n            if (this.cycles[2] < Constants.CYCLES_LCD_MODE2 && (this.memory.read(Constants.LCD_STAT) & 0x03) != 0x02) {\n                this.memory.write((this.memory.read(Constants.LCD_STAT) & 0xFC) | 0x02, Constants.LCD_STAT);\n                if ((this.memory.read(Constants.LCD_STAT) & 0x20) > 0) this.memory.write(this.memory.read(Constants.INT_FLAG) | Constants.INT_LCDC, Constants.INT_FLAG);\n                // Modo 11 \n            } else if (this.cycles[2] >= Constants.CYCLES_LCD_MODE2 && this.cycles[2] < Constants.CYCLES_LCD_MODE3 && (this.memory.read(Constants.LCD_STAT) & 0x03) != 0x03) {\n                // Se dibujan las primeras 144 lineas cuando se ha dejado de escribir en la zona grafica de memoria\n                this.graphics.hblank();\n                this.memory.write((this.memory.read(Constants.LCD_STAT) & 0xFC) | 0x03, Constants.LCD_STAT);\n                // Modo 00 (Durante el HBLANK, la CPU puede acceder a la display RAM entre 0x8000 y 0x9FFF)\n            } else if (this.cycles[2] >= Constants.CYCLES_LCD_MODE3 && (this.memory.read(Constants.LCD_STAT) & 0x03) != 0) {\n                this.memory.write(this.memory.read(Constants.LCD_STAT) & 0xFC, Constants.LCD_STAT);\n                if ((this.memory.read(Constants.LCD_STAT) & 0x08) > 0) this.memory.write(this.memory.read(Constants.INT_FLAG) | Constants.INT_LCDC, Constants.INT_FLAG);\n            }\n            // Modo 01 (Periodo VBLANK, la CPU puede acceder a la display RAM entre 0x8000 y 0x9FFF)\n        } else if ((this.memory.read(Constants.LCD_Y_LOC) >= 144) && (this.memory.read(Constants.LCD_STAT) & 0x03) != 0x01) {\n            // Refresco vertical\n            this.graphics.vblank();\n            this.memory.write((this.memory.read(Constants.LCD_STAT) & 0xFC) | 0x01, Constants.LCD_STAT);\n            if ((this.memory.read(Constants.LCD_STAT) & 0x10) > 0) this.memory.write(this.memory.read(Constants.INT_FLAG) | Constants.INT_LCDC, Constants.INT_FLAG);\n            this.memory.write(this.memory.read(Constants.INT_FLAG) | Constants.INT_VBLANK, Constants.INT_FLAG);\n        }\n\n    }\n\n    // Inicia las rutinas de tratamiento de cada una de las interrupciones que esten activas\n    private checkInterruptions() {\n        if (this.registers.flagIME == true) {\n            this.callInterruption(Constants.INT_VBLANK, 0x40) ||\n                this.callInterruption(Constants.INT_LCDC, 0x48) ||\n                this.callInterruption(Constants.INT_TIMER, 0x50) ||\n                this.callInterruption(Constants.INT_SERIALTX, 0x58) ||\n                this.callInterruption(Constants.INT_KEY, 0x60);\n        }\n    }\n\n    private callInterruption(interruption: number, direction: number) {\n        if ((this.memory.read(Constants.INT_FLAG) & interruption) > 0 && (this.memory.read(Constants.INT_ENABLE) & interruption) > 0) {\n            this.memory.write(this.memory.read(Constants.INT_FLAG) & ~interruption, Constants.INT_FLAG);\n\n            this.registers.SP--;\n            this.memory.write((this.registers.PC & 0xFF00) >> 8, this.registers.SP);\n            this.registers.SP--;\n            this.memory.write(this.registers.PC & 0x00FF, this.registers.SP);\n\n            this.registers.PC = direction;\n            return true;\n        }\n        return false;\n    }\n\n    // Ejecuta una instruccion del contador de programa\n    private processInstruction() {\n        const opCod = this.memory.read(this.registers.PC);\n        let instruction: Instruction;\n        if (opCod == 0xCB) {\n            this.registers.PC++;\n            instruction = OPCODES_CB[this.memory.read(this.registers.PC)]\n        } else {\n            instruction = OPCODES[opCod];\n        }\n\n        if (!instruction) {\n            throw new Error(`[ERROR] Invalid opcode 0x${opCod.toString(16).toUpperCase()}`);\n        }\n\n        // Ejecuta la instruccion y recoge su duracion teorica\n        const ticks = instruction(this.registers, this.memory);\n\n        // Aumenta los contadores de ciclos para las interrupciones\n        for (let i = 0; i < this.cycles.length; i++) this.cycles[i] += ticks;\n        return ticks;\n    }\n\n}","import { Constants } from './util/constants';\n\nexport class RenderScreen {\n\n    private buffer: Uint8ClampedArray;\n    private image: ImageData;\n    private canvasContext: CanvasRenderingContext2D | null;\n    private palette: number[];\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvasContext = canvas.getContext('2d');\n        if (this.canvasContext) {\n            this.canvasContext.canvas.width = Constants.SCREEN_WIDTH;\n            this.canvasContext.canvas.height = Constants.SCREEN_HEIGHT;\n            this.canvasContext.imageSmoothingEnabled = false;\n        }\n\n        this.buffer = new Uint8ClampedArray(4 * Constants.SCREEN_HEIGHT * Constants.SCREEN_WIDTH);\n        this.image = new ImageData(this.buffer, Constants.SCREEN_WIDTH, Constants.SCREEN_HEIGHT);\n        this.palette = Constants.DMG_COLORS;\n    }\n\n    setPalette(palette: number[]) {\n        this.palette = palette;\n    }\n\n    /// <summary>Actualiza la pantalla dibujando el frame que tiene actualmente en el buffer</summary>\n    refresh(buffer: Uint8Array) {\n        for (let line = 0; line < Constants.SCREEN_HEIGHT; line++) {\n            for (let column = 0; column < Constants.SCREEN_WIDTH; column++) {\n                const startIndex = (line * Constants.SCREEN_WIDTH * 4) + (column * 4);\n                const color = this.palette[buffer[(line * Constants.SCREEN_WIDTH) + column]];\n                this.buffer[startIndex] = (color & 0xFF0000) >> 16;\n                this.buffer[startIndex + 1] = (color & 0x00FF00) >> 8;\n                this.buffer[startIndex + 2] = color & 0xFF;\n                this.buffer[startIndex + 3] = 255;\n            }\n        }\n\n        createImageBitmap(this.image).then(bitmap => {\n            if (this.canvasContext) {\n                this.canvasContext.drawImage(\n                    bitmap,\n                    0,\n                    0,\n                    Constants.SCREEN_WIDTH,\n                    Constants.SCREEN_HEIGHT\n                );\n            }\n        });\n    }\n\n}","import { Cartridge } from '../peripherals/cartridge';\nimport { Constants } from '../util/constants';\nimport { Keypad } from '../peripherals/keypad';\n\nexport class Memory {\n\n    // Array con toda la memoria principal\n    public ram: Uint8Array;\n    // Cartucho cargado\n    private cartridge: Cartridge;\n    private keypad: Keypad;\n\n    constructor(cartridge: Cartridge, keypad: Keypad) {\n        this.ram = new Uint8Array(Constants.MEMSIZE);\n        this.cartridge = cartridge;\n        this.keypad = keypad;\n    }\n\n    // Lee una posicion de memoria\n    public read(direction: number): number {\n        let value: number = 0;\n\n        direction &= 0xFFFF;\n        // 0-0x8000: ROM del cartucho\n        if (direction >= 0 && direction < 0x8000) value = this.cartridge.read(direction);\n        // 0xA000-0xC000: RAM del cartucho\n        else if (direction >= 0xA000 && direction < 0xC000) value = this.cartridge.read(direction);\n        else value = this.ram[direction];\n        return value & 0xFF;\n    }\n\n    public readWord(direction: number): number {\n        return ((this.read(direction + 2) << 8) | this.read(direction + 1)) & 0xFFFF;\n    }\n\n    // Escribe un valor en una direccion de memoria\n    // Esta funcion solo debe ser accedida por las instrucciones, el resto de objetos como\n    // perifericos de pantalla o teclado deberan acceder directamente a la memoria sin pasar\n    // por estas funciones porque podrian producir un bucle infinito\n    public write(value: number, direction: number) {\n        direction &= 0xFFFF;\n        value &= 0xFF;\n        // 0-0x8000: ROM del cartucho\n        if (direction >= 0 && direction < 0x8000) this.cartridge.write(value, direction);\n        // 0xA000-0xC000: RAM del cartucho\n        else if (direction >= 0xA000 && direction < 0xC000) this.cartridge.write(value, direction);\n        // Echo Memory??\n        else if (direction >= 0xC000 && direction < 0xE000) this.ram[direction] = value;\n        // 0xFF00-0xFFFF: Registros de IO\n        else if (direction >= 0xFF00) this.writeIO(value, direction);\n        else this.ram[direction] = value;\n    }\n\n    // Escribe y realiza un tratamiento especial en las direccion de entrada / salida\n    private writeIO(value: number, direction: number) {\n        switch (direction) {\n            // Actualiza la pulsacion de las teclas en cuanto recibe la solicitud\n            case Constants.JOYPAD: \n                this.ram[Constants.JOYPAD] = value; \n                this.writeKeypad(); \n                break;\n            // Transferencia DMA de 160 bytes a partir de la direccion dada a 0xFE00\n            case Constants.LCD_DMA: \n                this.ram[Constants.LCD_DMA] = value; \n                const origin = this.ram[Constants.LCD_DMA] << 8;\n                this.ram.copyWithin(0xFE00, origin, origin + 0xA0); \n                break;\n            // Reset del control de DIV\n            case Constants.DIV_CNTR: this.ram[Constants.DIV_CNTR] = 0x00; break;\n            default: this.ram[direction] = value; break;\n        }\n    }\n\n    // Actualiza la direccion de memoria adecuada segun la matriz de teclas solicitada con el estado\n    // actual de las teclas\n    private writeKeypad() {\n        let joypad: number = this.ram[Constants.JOYPAD];\n        joypad &= 0xF0;\n        // Segun la peticion, se actualiza la memoria con las teclas apropiadas\n        const keys = this.keypad.keys;\n        switch (joypad) {\n            case 0x30: joypad = 0x3F; break;\n            case 0x20:\n                if (!keys[0]) joypad |= 0x08; // Down\n                if (!keys[1]) joypad |= 0x04; // Up\n                if (!keys[2]) joypad |= 0x02; // Left\n                if (!keys[3]) joypad |= 0x01; // Right\n                break;\n            case 0x10:\n                if (!keys[4]) joypad |= 0x08; // Start\n                if (!keys[5]) joypad |= 0x04; // Select\n                if (!keys[6]) joypad |= 0x02; // B\n                if (!keys[7]) joypad |= 0x01; // A\n                break;\n        }\n        // Accede directamente al array de la memoria para evitar bucles infinitos con las funciones de gestion\n        // del acceso a memoria\n        this.ram[Constants.JOYPAD] = joypad;\n    }\n\n    public reset() {\n        // Valor inicial de algunas direcciones de memoria\n        this.write(0xCF, Constants.JOYPAD);\n        this.write(0x00, Constants.SERIAL_DATA);\n        this.write(0x7E, Constants.SERIAL_CTRL);\n        this.write(0xFF, 0xFF03);\n        this.write(0xAF, Constants.DIV_CNTR);\n        this.write(0x00, Constants.TIMER_COUNT);\n        this.write(0x00, Constants.TIMER_RELOAD);\n        this.write(0xF8, Constants.TIMER_CRTL);\n        this.write(0x00, Constants.INT_FLAG);\n\n        this.write(0x80, Constants.SND_1_ENT);\n        this.write(0xBF, Constants.SND_1_WAV_LEN);\n        this.write(0xF3, Constants.SND_1_ENV);\n        this.write(0xFF, Constants.SND_1_FREQ_KICK_LOWER);\n        this.write(0xBF, Constants.SND_1_FREQ_KICK_UPPER);\n        this.write(0xFF, 0xFF15);\n        this.write(0x3F, Constants.SND_2_WAVE_LEN);\n        this.write(0x00, Constants.SND_2_ENV);\n        this.write(0xFF, Constants.SND_2_FREQ_KICK_LOWER);\n        this.write(0xBF, Constants.SND_2_FREQ_KICK_UPPER);\n        this.write(0x7F, Constants.SND_3_ON_OFF);\n        this.write(0xFF, Constants.SND_3_LEN);\n        this.write(0x9F, Constants.SND_3_VOLUME);\n        this.write(0xFF, Constants.SND_3_FREQ_KICK_LOWER);\n        this.write(0xBF, Constants.SND_3_FREQ_KICK_UPPER);\n        this.write(0xFF, 0xFF1E);\n        this.write(0xFF, 0xFF1F);\n        this.write(0xFF, Constants.SND_4_LEN);\n        this.write(0x00, Constants.SND_4_ENV);\n        this.write(0x00, Constants.SND_4_POLY_KICK_LOWER);\n        this.write(0xBF, Constants.SND_4_POLY_KICK_UPPER);\n        this.write(0x77, Constants.SND_VOICE_INP);\n        this.write(0xF3, Constants.SND_STEREO);\n        this.write(0xF1, Constants.SND_STAT);\n        this.write(0x06, Constants.SND_BNK_10);\n        this.write(0xFE, Constants.SND_BNK_11);\n        this.write(0x0E, Constants.SND_BNK_12);\n        this.write(0x7F, Constants.SND_BNK_13);\n        this.write(0x00, Constants.SND_BNK_14);\n        this.write(0xFF, Constants.SND_BNK_15);\n        this.write(0x58, Constants.SND_BNK_16);\n        this.write(0xDF, Constants.SND_BNK_17);\n        this.write(0x00, Constants.SND_BNK_20);\n        this.write(0xEC, Constants.SND_BNK_21);\n        this.write(0x00, Constants.SND_BNK_22);\n        this.write(0xBF, Constants.SND_BNK_23);\n        this.write(0x0C, Constants.SND_BNK_24);\n        this.write(0xED, Constants.SND_BNK_25);\n        this.write(0x03, Constants.SND_BNK_26);\n        this.write(0xF7, Constants.SND_BNK_27);\n\n        this.write(0x91, Constants.LCD_CTRL);\n        this.write(0x85, Constants.LCD_STAT);\n        this.write(0x00, Constants.LCD_SCROLL_Y);\n        this.write(0x00, Constants.LCD_SCROLL_X);\n        this.write(0x00, Constants.LCD_Y_LOC);\n        this.write(0x00, Constants.LCD_Y_COMP);\n        this.write(0x00, Constants.LCD_DMA);\n        this.write(0xFC, Constants.LCD_BACK_PALETTE);\n        this.write(0xFF, Constants.LCD_SPR0_PALETTE);\n        this.write(0xFF, Constants.LCD_SPR1_PALETTE);\n        this.write(0x00, Constants.LCD_WIN_Y);\n        this.write(0x00, Constants.LCD_WIN_X);\n        this.write(0x7E, Constants.CPU_SPEED_REG);\n        this.write(0xFF, 0xFF4E);\n        this.write(0xFE, Constants.VRAM_BANK);\n\n        this.write(0xFF, 0xFF50);\n        this.write(0x00, Constants.DMA_SRC_UPPER);\n        this.write(0x00, Constants.DMA_SRC_LOWER);\n        this.write(0x00, Constants.DMA_DST_UPPER);\n        this.write(0x00, Constants.DMA_DST_LOWER);\n        this.write(0xFF, Constants.DMA_LEN_TYPE);\n        this.write(0x00, Constants.IR_PORT);\n        this.write(0xC0, Constants.BGP_INDEX);\n        this.write(0x00, Constants.BGP_DATA);\n        this.write(0xC1, Constants.OBP_INDEX);\n        this.write(0x00, Constants.OBP_DATA);\n\n        this.write(0xF8, Constants.RAM_BANK);\n\n        this.write(0x00, Constants.INT_ENABLE);\n    }\n}\n","import { Key } from '../util/key';\n\nexport class Keypad {\n\n    // Estado actual de las teclas\n    //              Down,  Up,    Left,  Right, Start, Select, B,    A\n    public keys = [false, false, false, false, false, false, false, false];\n\n    // Invierte el estado de una tecla\n    public toggleKey(key: Key) { this.keys[key] = !this.keys[key]; }\n\n    // Registra la pulsacion de una tecla\n    public keyDown(key: Key) {\n        this.keys[key] = true;\n    }\n\n    // Registra la liberacion de una tecla pulsada previamente\n    public keyUp(key: Key) {\n        this.keys[key] = false;\n    }\n\n}","import { Cartridge } from \"./peripherals/cartridge\";\nimport { MBC0, MBC1, MBC2, MBC3, MBC4, MBC5 } from './peripherals';\nimport { GPU } from './kernel/gpu';\nimport { CPU } from './kernel/cpu';\nimport { RenderScreen } from './render';\nimport { Memory } from './kernel/memory';\nimport { Keypad } from './peripherals/keypad';\nimport { Constants } from './util/constants';\n\nexport class Main {\n\n  private keypad: Keypad;\n  private cartridge: Cartridge;\n  private screen: RenderScreen;\n  private cpu: CPU;\n  private renderId: number;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.keypad = new Keypad();\n    this.screen = new RenderScreen(canvas);\n  }\n\n  set palette(palette: number[]) { this.screen.setPalette(palette); }\n  get keys() { return this.keypad; }\n  \n  loadData(data: Uint8Array): string{\n    this.cartridge = this.loadCartridge(data);\n    const memory = new Memory(this.cartridge, this.keypad);\n    const gpu = new GPU(memory, this.screen);\n    this.cpu = new CPU(memory, gpu);\n\n    this.stop();\n    this.cpu.reset();\n\n    return this.cartridge.name;\n  }\n\n  start() {\n    let lastLoopTime: number | null = null;\n    const gameLoop = (loopTime: number) => {\n      let deltaLoopTime: number | null = null;\n      if (lastLoopTime != null) {\n        deltaLoopTime = Math.min(loopTime - lastLoopTime, 1000 / 60);\n      }\n\n      if (deltaLoopTime) {\n        let ticks = 0;\n\n        while((ticks / (Constants.CPU_SPEED * 1000)) < deltaLoopTime){\n          ticks += this.cpu.run();\n        }\n      }\n\n      // Prepare for new frame\n      lastLoopTime = loopTime;\n      this.renderId = requestAnimationFrame(gameLoop);\n    };\n\n    // Start the game loop\n    this.renderId = requestAnimationFrame(gameLoop);\n  }\n\n  stop() {\n    cancelAnimationFrame(this.renderId);\n  }\n\n  private loadCartridge(data: Uint8Array) {\n    let cartridge: Cartridge;\n\n    switch (data[0x0147]) {\n      case 0x00: cartridge = new MBC0(data); break; // ROM Only\n      case 0x01: cartridge = new MBC1(data); break; // ROM + MBC1\n      case 0x02: cartridge = new MBC1(data); break; // ROM + MBC1 + RAM\n      case 0x03: cartridge = new MBC1(data); break; // ROM + MBC1 + RAM + BATTERY\n      case 0x04:\n      case 0x05: cartridge = new MBC2(data); break; // ROM + MBC2\n      case 0x06: cartridge = new MBC2(data); break; // ROM + MBC2 + BATTERY\n      case 0x07:\n      case 0x08: cartridge = new MBC0(data); break; // ROM + RAM\n      case 0x09: cartridge = new MBC0(data); break; // ROM + RAM + BATTERY\n      case 0x0A:\n      case 0x0B: cartridge = new MBC0(data); break; // ROM + MMM01\n      case 0x0C: cartridge = new MBC0(data); break; // ROM + MMM01 + SRAM\n      case 0x0D: cartridge = new MBC0(data); break; // ROM + MMM01 + SRAM + BATTERY\n      case 0x0E:\n      case 0x0F: cartridge = new MBC3(data); break; // ROM + MBC3 + TIMER + BATTERY\n      case 0x10: cartridge = new MBC3(data); break; // ROM + MBC3 + TIMER + RAM + BATTERY\n      case 0x11: cartridge = new MBC3(data); break; // ROM + MBC3\n      case 0x12: cartridge = new MBC3(data); break; // ROM + MBC3 + RAM\n      case 0x13: cartridge = new MBC3(data); break; // ROM + MBC3 + RAM + BATTERY\n      case 0x14:\n      case 0x15: cartridge = new MBC4(data); break; // ROM + MBC4\n      case 0x16: cartridge = new MBC4(data); break; // ROM + MBC4 + RAM\n      case 0x17: cartridge = new MBC4(data); break; // ROM + MBC4 + RAM + BATTERY\n      case 0x18:\n      case 0x19: cartridge = new MBC5(data); break; // ROM + MBC5\n      case 0x1A: cartridge = new MBC5(data); break; // ROM + MBC5 + RAM\n      case 0x1B: cartridge = new MBC5(data); break; // ROM + MBC5 + RAM + BATTERY\n      case 0x1C: cartridge = new MBC5(data); break; // ROM + MBC5 + RUMBLE\n      case 0x1D: cartridge = new MBC5(data); break; // ROM + MBC5 + RUMBLE + SRAM\n      case 0x1E: cartridge = new MBC5(data); break; // ROM + MBC5 + RUMBLE + SRAM + BATTERY\n      case 0x1F: cartridge = new MBC0(data); break; // POCKET CAMERA\n\n      case 0xFD: cartridge = new MBC0(data); break; // BANDAI TAMA5\n      case 0xFE: cartridge = new MBC3(data); break; // HUDSON HuC-3\n      case 0xFF: cartridge = new MBC1(data); break; // HUDSON HuC-1\n\n      default: throw new Error(\"[ERROR] Unknown cartridge type \" + data[0x0147]);\n    }\n\n    if (data[0x143] == 0x80) throw new Error(\"GameBoy Color not supported\");\n    if (data[0x146] != 0x00) console.log(\"SuperGameBoy capabilities not supported\");\n\n    return cartridge;\n  }\n\n}","import { Constants } from \"./constants\";\n\nexport enum Key {\n    Down = Constants.KEY_DOWN,\n    Up = Constants.KEY_UP,\n    Left = Constants.KEY_LEFT,\n    Right = Constants.KEY_RIGHT,\n    Start = Constants.KEY_START,\n    Select = Constants.KEY_SELECT,\n    B = Constants.KEY_B,\n    A = Constants.KEY_A\n}","import 'regenerator-runtime/runtime';\nimport { Main } from './src/app/tsgbe';\nimport { Key } from './src/app/util/key';\n\nlet tsgbe: Main;\nconst vibration = 1;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const btn = document.getElementById('power') as HTMLElement;\n    const fileInput = document.querySelector('#file-input') as HTMLElement;\n    btn.addEventListener(\"click\", (e: Event) => fileInput.click());\n    fileInput.addEventListener('change', (e: Event) => openFile(e));\n\n    function keyUp(key: Key){\n      return () => tsgbe.keys.keyUp(key);\n    }\n\n    function keyDown(key: Key){\n      return () => {\n        window.navigator.vibrate(vibration);\n        tsgbe.keys.keyDown(key);\n      }\n    }\n\n    function bindButton(id: string, key: Key){\n      document.querySelector(id).addEventListener('touchstart', keyDown(key));\n      document.querySelector(id).addEventListener('touchend', keyUp(key));\n      document.querySelector(id).addEventListener('mousedown', keyDown(key));\n      document.querySelector(id).addEventListener('mouseup', keyUp(key));\n    }\n\n    bindButton('#up', Key.Up);\n    bindButton('#down', Key.Down);\n    bindButton('#left', Key.Left);\n    bindButton('#right', Key.Right);\n    bindButton('#start', Key.Start);\n    bindButton('#select', Key.Select);\n    bindButton('#btn-a', Key.A);\n    bindButton('#btn-b', Key.B);\n    \n    tsgbe = new Main(<HTMLCanvasElement>document.getElementById('canvas'));\n});\n\n/*\n  13: Enter\n  16: Shift\n  90: Z\n  88: X\n  38: Up arrow\n  40: Down arrow\n  37: Left arrow\n  39: Right arrow\n*/\ndocument.onkeydown = function (e) {\n    switch (e.keyCode) {\n        case 13: tsgbe.keys.keyDown(Key.Start); break;\n        case 16: tsgbe.keys.keyDown(Key.Select); break;\n        case 90: tsgbe.keys.keyDown(Key.A); break;\n        case 88: tsgbe.keys.keyDown(Key.B); break;\n        case 38: tsgbe.keys.keyDown(Key.Up); break;\n        case 40: tsgbe.keys.keyDown(Key.Down); break;\n        case 37: tsgbe.keys.keyDown(Key.Left); break;\n        case 39: tsgbe.keys.keyDown(Key.Right); break;\n    }\n}\n\ndocument.onkeyup = function (e) {\n    switch (e.keyCode) {\n        case 13: tsgbe.keys.keyUp(Key.Start); break;\n        case 16: tsgbe.keys.keyUp(Key.Select); break;\n        case 90: tsgbe.keys.keyUp(Key.A); break;\n        case 88: tsgbe.keys.keyUp(Key.B); break;\n        case 38: tsgbe.keys.keyUp(Key.Up); break;\n        case 40: tsgbe.keys.keyUp(Key.Down); break;\n        case 37: tsgbe.keys.keyUp(Key.Left); break;\n        case 39: tsgbe.keys.keyUp(Key.Right); break;\n    }\n}\n\nasync function openFile(fileInputEvent: any) {\n    if (fileInputEvent.target.files.length > 0) {\n        const fileContent = await fileToByteArray(fileInputEvent.target.files[0]);\n        const name = tsgbe.loadData(new Uint8Array(fileContent as ArrayBuffer));\n        console.log(name);\n        tsgbe.start();\n    }\n}\n\nfunction fileToByteArray(file: any) {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n        try {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = function () {\n                resolve(reader.result);\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}